2025-08-13 17:42:18.050 | + launcher_opts=(--etc-dir /etc/trino)
2025-08-13 17:42:18.050 | + grep -s -q node.id /etc/trino/node.properties
2025-08-13 17:42:18.051 | + launcher_opts+=("-Dnode.id=${HOSTNAME}")
2025-08-13 17:42:18.051 | + exec /usr/lib/trino/bin/launcher run --etc-dir /etc/trino -Dnode.id=e8cda387ec03
2025-08-13 17:42:18.147 | WARNING: Using incubator modules: jdk.incubator.vector
2025-08-13 17:42:19.065 | WARNING: A terminally deprecated method in sun.misc.Unsafe has been called
2025-08-13 17:42:19.065 | WARNING: sun.misc.Unsafe::arrayBaseOffset has been called by org.openjdk.jol.vm.HotspotUnsafe (file:/usr/lib/trino/lib/org.openjdk.jol_jol-core-0.17.jar)
2025-08-13 17:42:19.065 | WARNING: Please consider reporting this to the maintainers of class org.openjdk.jol.vm.HotspotUnsafe
2025-08-13 17:42:19.065 | WARNING: sun.misc.Unsafe::arrayBaseOffset will be removed in a future release
2025-08-13 17:42:19.087 | Aug 13, 2025 10:42:19 AM io.airlift.log.Logger info
2025-08-13 17:42:19.087 | INFO: Java version: 24
2025-08-13 17:42:19.098 | 2025-08-13T10:42:19.097Z	INFO	main	io.airlift.log.Logging	Logging to stderr
2025-08-13 17:42:19.099 | 2025-08-13T10:42:19.099Z	INFO	main	Bootstrap	Loading secrets plugins
2025-08-13 17:42:19.099 | 2025-08-13T10:42:19.099Z	INFO	main	Bootstrap	Loading configuration
2025-08-13 17:42:19.146 | 2025-08-13T10:42:19.145Z	INFO	main	org.hibernate.validator.internal.util.Version	HV000001: Hibernate Validator 8.0.2.Final
2025-08-13 17:42:19.207 | 2025-08-13T10:42:19.207Z	INFO	main	Bootstrap	Initializing logging
2025-08-13 17:42:19.231 | 2025-08-13T10:42:19.231Z	INFO	main	io.airlift.log.Logging	Disabling stderr output
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.736Z	INFO	main	Bootstrap	PROPERTY                                                                                DEFAULT                                                                    RUNTIME                                                                    DESCRIPTION
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.uri                                                                           ----                                                                       http://localhost:8080                                                      Discovery service base URI
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	service-inventory.uri                                                                   ----                                                                       ----                                                                       Service inventory base URI
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	service-inventory.update-interval                                                       10.00s                                                                     10.00s                                                                     Service inventory update interval
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.trino.pool                                                                    general                                                                    general
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.max-age                                                                       30.00s                                                                     30.00s
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.store-cache-ttl                                                               1.00s                                                                      1.00s
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	dynamic.store.gc-interval                                                               1.00h                                                                      1.00h
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	dynamic.store.remote.max-batch-size                                                     1000                                                                       1000
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	dynamic.store.remote.queue-size                                                         1000                                                                       1000
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	dynamic.store.remote.update-interval                                                    5.00s                                                                      5.00s
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	dynamic.store.remote.replication-interval                                               1.00m                                                                      1.00m
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	dynamic.store.tombstone-max-age                                                         1.00d                                                                      1.00d
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.https.automatic-shared-secret                                     [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.use-blocking-connect                                              false                                                                      false
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.connect-timeout                                                   5.00s                                                                      5.00s
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.destination-idle-timeout                                          1.00m                                                                      1.00m
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.http2.enabled                                                     false                                                                      false                                                                      Enable the HTTP/2 transport
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.http2.session-receive-window-size                                 16MB                                                                       16MB                                                                       Initial size of session's flow control receive window for HTTP/2
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.http2.stream-receive-window-size                                  16MB                                                                       16MB                                                                       Initial size of stream's flow control receive window for HTTP/2
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.http2.input-buffer-size                                           8kB                                                                        8kB                                                                        Size of the buffer used to read from the network for HTTP/2
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.buffer-pool-type                                                  DEFAULT                                                                    DEFAULT
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.http-proxy                                                        ----                                                                       ----
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.http-proxy.password                                               [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.http-proxy.user                                                   ----                                                                       ----
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.https.excluded-cipher                                             [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  Setting this config property overwrites Jetty's default excluded cipher suites
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.https.included-cipher                                             []                                                                         []
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.idle-timeout                                                      1.00m                                                                      1.00m
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.key-store-password                                                [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.key-store-path                                                    ----                                                                       ----
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.log.buffer-size                                                   1MB                                                                        1MB
2025-08-13 17:42:19.737 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.log.compression.enabled                                           true                                                                       true
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.log.enabled                                                       false                                                                      false
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.log.flush-interval                                                10.00s                                                                     10.00s
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.737Z	INFO	main	Bootstrap	discovery.http-client.log.max-history                                                   15                                                                         15
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.log.max-size                                                      1GB                                                                        1GB
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.log.path                                                          var/log/                                                                   var/log/                                                                   The name of the log file will be prefixed with the name of the HTTP client (<client_name>-http-client.log)
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.log.queue-size                                                    10000                                                                      10000
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.max-connections-per-server                                        20                                                                         20
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.max-content-length                                                16MB                                                                       16MB
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.max-direct-memory                                                 ----                                                                       ----
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.max-heap-memory                                                   ----                                                                       ----
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.max-requests-queued-per-destination                               1024                                                                       1024
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.max-threads                                                       200                                                                        200
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.min-threads                                                       8                                                                          8
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.record-request-complete                                           true                                                                       true
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.request-buffer-size                                               4kB                                                                        4kB
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.request-timeout                                                   5.00m                                                                      5.00m
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.response-buffer-size                                              16kB                                                                       16kB
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.http-proxy.secure                                                 false                                                                      false
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.secure-random-algorithm                                           ----                                                                       ----
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.selector-count                                                    2                                                                          2
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.socks-proxy                                                       ----                                                                       ----
2025-08-13 17:42:19.738 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.tcp-keep-alive-idle-time                                          ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.timeout-concurrency                                               1                                                                          1                                                                          Number of concurrent locks for timeout
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.timeout-threads                                                   1                                                                          1                                                                          Total number of timeout threads
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.trust-store-password                                              [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.trust-store-path                                                  ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	discovery.http-client.https.hostname-verification                                       true                                                                       true                                                                       Verify that server hostname matches the server certificate
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.https.automatic-shared-secret                                       [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.use-blocking-connect                                                false                                                                      false
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.connect-timeout                                                     5.00s                                                                      5.00s
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.destination-idle-timeout                                            1.00m                                                                      1.00m
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.http2.enabled                                                       false                                                                      false                                                                      Enable the HTTP/2 transport
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.http2.session-receive-window-size                                   16MB                                                                       16MB                                                                       Initial size of session's flow control receive window for HTTP/2
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.http2.stream-receive-window-size                                    16MB                                                                       16MB                                                                       Initial size of stream's flow control receive window for HTTP/2
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.http2.input-buffer-size                                             8kB                                                                        8kB                                                                        Size of the buffer used to read from the network for HTTP/2
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.buffer-pool-type                                                    DEFAULT                                                                    DEFAULT
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.http-proxy                                                          ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.http-proxy.password                                                 [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.http-proxy.user                                                     ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.https.excluded-cipher                                               [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  Setting this config property overwrites Jetty's default excluded cipher suites
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.https.included-cipher                                               []                                                                         []
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.idle-timeout                                                        1.00m                                                                      1.00m
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.key-store-password                                                  [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.key-store-path                                                      ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.log.buffer-size                                                     1MB                                                                        1MB
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.738Z	INFO	main	Bootstrap	dynamic.http-client.log.compression.enabled                                             true                                                                       true
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.log.enabled                                                         false                                                                      false
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.log.flush-interval                                                  10.00s                                                                     10.00s
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.log.max-history                                                     15                                                                         15
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.log.max-size                                                        1GB                                                                        1GB
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.log.path                                                            var/log/                                                                   var/log/                                                                   The name of the log file will be prefixed with the name of the HTTP client (<client_name>-http-client.log)
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.log.queue-size                                                      10000                                                                      10000
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.max-connections-per-server                                          20                                                                         20
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.max-content-length                                                  16MB                                                                       16MB
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.max-direct-memory                                                   ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.max-heap-memory                                                     ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.max-requests-queued-per-destination                                 1024                                                                       1024
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.max-threads                                                         200                                                                        200
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.min-threads                                                         8                                                                          8
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.record-request-complete                                             true                                                                       true
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.request-buffer-size                                                 4kB                                                                        4kB
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.request-timeout                                                     5.00m                                                                      5.00m
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.response-buffer-size                                                16kB                                                                       16kB
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.http-proxy.secure                                                   false                                                                      false
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.secure-random-algorithm                                             ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.selector-count                                                      2                                                                          2
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.socks-proxy                                                         ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.tcp-keep-alive-idle-time                                            ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.timeout-concurrency                                                 1                                                                          1                                                                          Number of concurrent locks for timeout
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.timeout-threads                                                     1                                                                          1                                                                          Total number of timeout threads
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.trust-store-password                                                [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.trust-store-path                                                    ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	dynamic.http-client.https.hostname-verification                                         true                                                                       true                                                                       Verify that server hostname matches the server certificate
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.https.automatic-shared-secret                              [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.use-blocking-connect                                       false                                                                      false
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.connect-timeout                                            5.00s                                                                      5.00s
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.destination-idle-timeout                                   1.00m                                                                      1.00m
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.http2.enabled                                              false                                                                      false                                                                      Enable the HTTP/2 transport
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.http2.session-receive-window-size                          16MB                                                                       16MB                                                                       Initial size of session's flow control receive window for HTTP/2
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.http2.stream-receive-window-size                           16MB                                                                       16MB                                                                       Initial size of stream's flow control receive window for HTTP/2
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.http2.input-buffer-size                                    8kB                                                                        8kB                                                                        Size of the buffer used to read from the network for HTTP/2
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.buffer-pool-type                                           DEFAULT                                                                    DEFAULT
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.http-proxy                                                 ----                                                                       ----
2025-08-13 17:42:19.739 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.http-proxy.password                                        [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.740 | 2025-08-13T10:42:19.739Z	INFO	main	Bootstrap	failure-detector.http-client.http-proxy.user                                            ----                                                                       ----
2025-08-13 17:42:19.740 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.https.excluded-cipher                                      [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  Setting this config property overwrites Jetty's default excluded cipher suites
2025-08-13 17:42:19.740 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.https.included-cipher                                      []                                                                         []
2025-08-13 17:42:19.740 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.idle-timeout                                               1.00m                                                                      1.00m
2025-08-13 17:42:19.740 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.key-store-password                                         [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.740 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.key-store-path                                             ----                                                                       ----
2025-08-13 17:42:19.740 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.log.buffer-size                                            1MB                                                                        1MB
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.log.compression.enabled                                    true                                                                       true
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.log.enabled                                                false                                                                      false
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.log.flush-interval                                         10.00s                                                                     10.00s
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.log.max-history                                            15                                                                         15
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.740Z	INFO	main	Bootstrap	failure-detector.http-client.log.max-size                                               1GB                                                                        1GB
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.log.path                                                   var/log/                                                                   var/log/                                                                   The name of the log file will be prefixed with the name of the HTTP client (<client_name>-http-client.log)
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.log.queue-size                                             10000                                                                      10000
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.max-connections-per-server                                 20                                                                         20
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.max-content-length                                         16MB                                                                       16MB
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.max-direct-memory                                          ----                                                                       ----
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.max-heap-memory                                            ----                                                                       ----
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.max-requests-queued-per-destination                        1024                                                                       1024
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.max-threads                                                200                                                                        200
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.min-threads                                                8                                                                          8
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.record-request-complete                                    true                                                                       true
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.request-buffer-size                                        4kB                                                                        4kB
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.request-timeout                                            5.00m                                                                      5.00m
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.response-buffer-size                                       16kB                                                                       16kB
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.http-proxy.secure                                          false                                                                      false
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.secure-random-algorithm                                    ----                                                                       ----
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.selector-count                                             2                                                                          2
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.socks-proxy                                                ----                                                                       ----
2025-08-13 17:42:19.741 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.tcp-keep-alive-idle-time                                   ----                                                                       ----
2025-08-13 17:42:19.742 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.timeout-concurrency                                        1                                                                          1                                                                          Number of concurrent locks for timeout
2025-08-13 17:42:19.742 | 2025-08-13T10:42:19.741Z	INFO	main	Bootstrap	failure-detector.http-client.timeout-threads                                            1                                                                          1                                                                          Total number of timeout threads
2025-08-13 17:42:19.742 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	failure-detector.http-client.trust-store-password                                       [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.742 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	failure-detector.http-client.trust-store-path                                           ----                                                                       ----
2025-08-13 17:42:19.742 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	failure-detector.http-client.https.hostname-verification                                true                                                                       true                                                                       Verify that server hostname matches the server certificate
2025-08-13 17:42:19.742 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.https.automatic-shared-secret                                [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.742 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.use-blocking-connect                                         false                                                                      false
2025-08-13 17:42:19.742 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.connect-timeout                                              5.00s                                                                      5.00s
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.destination-idle-timeout                                     1.00m                                                                      1.00m
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.http2.enabled                                                false                                                                      false                                                                      Enable the HTTP/2 transport
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.http2.session-receive-window-size                            16MB                                                                       16MB                                                                       Initial size of session's flow control receive window for HTTP/2
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.http2.stream-receive-window-size                             16MB                                                                       16MB                                                                       Initial size of stream's flow control receive window for HTTP/2
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.http2.input-buffer-size                                      8kB                                                                        8kB                                                                        Size of the buffer used to read from the network for HTTP/2
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.buffer-pool-type                                             DEFAULT                                                                    DEFAULT
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.http-proxy                                                   ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.http-proxy.password                                          [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.http-proxy.user                                              ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.https.excluded-cipher                                        [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  Setting this config property overwrites Jetty's default excluded cipher suites
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.https.included-cipher                                        []                                                                         []
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.idle-timeout                                                 30.00s                                                                     30.00s
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.key-store-password                                           [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.key-store-path                                               ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.log.buffer-size                                              1MB                                                                        1MB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.742Z	INFO	main	Bootstrap	memory-manager.http-client.log.compression.enabled                                      true                                                                       true
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.log.enabled                                                  false                                                                      false
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.log.flush-interval                                           10.00s                                                                     10.00s
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.log.max-history                                              15                                                                         15
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.log.max-size                                                 1GB                                                                        1GB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.log.path                                                     var/log/                                                                   var/log/                                                                   The name of the log file will be prefixed with the name of the HTTP client (<client_name>-http-client.log)
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.log.queue-size                                               10000                                                                      10000
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.max-connections-per-server                                   20                                                                         20
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.max-content-length                                           16MB                                                                       16MB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.max-direct-memory                                            ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.max-heap-memory                                              ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.max-requests-queued-per-destination                          1024                                                                       1024
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.max-threads                                                  200                                                                        200
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.min-threads                                                  8                                                                          8
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.record-request-complete                                      true                                                                       true
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.request-buffer-size                                          4kB                                                                        4kB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.request-timeout                                              10.00s                                                                     10.00s
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.response-buffer-size                                         16kB                                                                       16kB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.http-proxy.secure                                            false                                                                      false
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.secure-random-algorithm                                      ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.selector-count                                               2                                                                          2
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.socks-proxy                                                  ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.tcp-keep-alive-idle-time                                     ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.timeout-concurrency                                          1                                                                          1                                                                          Number of concurrent locks for timeout
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.timeout-threads                                              1                                                                          1                                                                          Total number of timeout threads
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.trust-store-password                                         [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.trust-store-path                                             ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	memory-manager.http-client.https.hostname-verification                                  true                                                                       true                                                                       Verify that server hostname matches the server certificate
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	node-manager.http-client.https.automatic-shared-secret                                  [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	node-manager.http-client.use-blocking-connect                                           false                                                                      false
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	node-manager.http-client.connect-timeout                                                5.00s                                                                      5.00s
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	node-manager.http-client.destination-idle-timeout                                       1.00m                                                                      1.00m
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	node-manager.http-client.http2.enabled                                                  false                                                                      false                                                                      Enable the HTTP/2 transport
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	node-manager.http-client.http2.session-receive-window-size                              16MB                                                                       16MB                                                                       Initial size of session's flow control receive window for HTTP/2
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	node-manager.http-client.http2.stream-receive-window-size                               16MB                                                                       16MB                                                                       Initial size of stream's flow control receive window for HTTP/2
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.743Z	INFO	main	Bootstrap	node-manager.http-client.http2.input-buffer-size                                        8kB                                                                        8kB                                                                        Size of the buffer used to read from the network for HTTP/2
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.buffer-pool-type                                               DEFAULT                                                                    DEFAULT
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.http-proxy                                                     ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.http-proxy.password                                            [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.http-proxy.user                                                ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.https.excluded-cipher                                          [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  Setting this config property overwrites Jetty's default excluded cipher suites
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.https.included-cipher                                          []                                                                         []
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.idle-timeout                                                   30.00s                                                                     30.00s
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.key-store-password                                             [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.key-store-path                                                 ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.log.buffer-size                                                1MB                                                                        1MB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.log.compression.enabled                                        true                                                                       true
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.log.enabled                                                    false                                                                      false
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.log.flush-interval                                             10.00s                                                                     10.00s
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.log.max-history                                                15                                                                         15
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.log.max-size                                                   1GB                                                                        1GB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.log.path                                                       var/log/                                                                   var/log/                                                                   The name of the log file will be prefixed with the name of the HTTP client (<client_name>-http-client.log)
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.log.queue-size                                                 10000                                                                      10000
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.max-connections-per-server                                     20                                                                         20
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.max-content-length                                             16MB                                                                       16MB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.max-direct-memory                                              ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.max-heap-memory                                                ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.max-requests-queued-per-destination                            1024                                                                       1024
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.max-threads                                                    200                                                                        200
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.min-threads                                                    8                                                                          8
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.record-request-complete                                        true                                                                       true
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.request-buffer-size                                            4kB                                                                        4kB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.request-timeout                                                10.00s                                                                     10.00s
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.response-buffer-size                                           16kB                                                                       16kB
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.http-proxy.secure                                              false                                                                      false
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.secure-random-algorithm                                        ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.selector-count                                                 2                                                                          2
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.socks-proxy                                                    ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.tcp-keep-alive-idle-time                                       ----                                                                       ----
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.timeout-concurrency                                            1                                                                          1                                                                          Number of concurrent locks for timeout
2025-08-13 17:42:19.744 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.timeout-threads                                                1                                                                          1                                                                          Total number of timeout threads
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.744Z	INFO	main	Bootstrap	node-manager.http-client.trust-store-password                                           [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	node-manager.http-client.trust-store-path                                               ----                                                                       ----
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	node-manager.http-client.https.hostname-verification                                    true                                                                       true                                                                       Verify that server hostname matches the server certificate
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.https.automatic-shared-secret                                      [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.use-blocking-connect                                               false                                                                      false
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.connect-timeout                                                    5.00s                                                                      5.00s
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.destination-idle-timeout                                           1.00m                                                                      1.00m
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.http2.enabled                                                      false                                                                      false                                                                      Enable the HTTP/2 transport
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.http2.session-receive-window-size                                  16MB                                                                       16MB                                                                       Initial size of session's flow control receive window for HTTP/2
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.http2.stream-receive-window-size                                   16MB                                                                       16MB                                                                       Initial size of stream's flow control receive window for HTTP/2
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.http2.input-buffer-size                                            8kB                                                                        8kB                                                                        Size of the buffer used to read from the network for HTTP/2
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.buffer-pool-type                                                   DEFAULT                                                                    DEFAULT
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.http-proxy                                                         ----                                                                       ----
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.http-proxy.password                                                [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.http-proxy.user                                                    ----                                                                       ----
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.https.excluded-cipher                                              [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  Setting this config property overwrites Jetty's default excluded cipher suites
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.https.included-cipher                                              []                                                                         []
2025-08-13 17:42:19.745 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.idle-timeout                                                       30.00s                                                                     30.00s
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.key-store-password                                                 [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.key-store-path                                                     ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.log.buffer-size                                                    1MB                                                                        1MB
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.745Z	INFO	main	Bootstrap	exchange.http-client.log.compression.enabled                                            true                                                                       true
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.log.enabled                                                        false                                                                      false
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.log.flush-interval                                                 10.00s                                                                     10.00s
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.log.max-history                                                    15                                                                         15
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.log.max-size                                                       1GB                                                                        1GB
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.log.path                                                           var/log/                                                                   var/log/                                                                   The name of the log file will be prefixed with the name of the HTTP client (<client_name>-http-client.log)
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.log.queue-size                                                     10000                                                                      10000
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.max-connections-per-server                                         250                                                                        250
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.max-content-length                                                 32MB                                                                       32MB
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.max-direct-memory                                                  ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.max-heap-memory                                                    ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.max-requests-queued-per-destination                                65536                                                                      65536
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.max-threads                                                        200                                                                        200
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.min-threads                                                        8                                                                          8
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.record-request-complete                                            true                                                                       true
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.request-buffer-size                                                4kB                                                                        4kB
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.request-timeout                                                    10.00s                                                                     10.00s
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.response-buffer-size                                               16kB                                                                       16kB
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.http-proxy.secure                                                  false                                                                      false
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.secure-random-algorithm                                            ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.selector-count                                                     2                                                                          2
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.socks-proxy                                                        ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.tcp-keep-alive-idle-time                                           ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.timeout-concurrency                                                1                                                                          1                                                                          Number of concurrent locks for timeout
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.timeout-threads                                                    1                                                                          1                                                                          Total number of timeout threads
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.trust-store-password                                               [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.trust-store-path                                                   ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	exchange.http-client.https.hostname-verification                                        true                                                                       true                                                                       Verify that server hostname matches the server certificate
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.https.automatic-shared-secret                                     [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.use-blocking-connect                                              false                                                                      false
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.connect-timeout                                                   5.00s                                                                      5.00s
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.destination-idle-timeout                                          1.00m                                                                      1.00m
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.http2.enabled                                                     false                                                                      false                                                                      Enable the HTTP/2 transport
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.http2.session-receive-window-size                                 16MB                                                                       16MB                                                                       Initial size of session's flow control receive window for HTTP/2
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.http2.stream-receive-window-size                                  16MB                                                                       16MB                                                                       Initial size of stream's flow control receive window for HTTP/2
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.http2.input-buffer-size                                           8kB                                                                        8kB                                                                        Size of the buffer used to read from the network for HTTP/2
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.buffer-pool-type                                                  DEFAULT                                                                    DEFAULT
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.http-proxy                                                        ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.http-proxy.password                                               [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.http-proxy.user                                                   ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.https.excluded-cipher                                             [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  Setting this config property overwrites Jetty's default excluded cipher suites
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.https.included-cipher                                             []                                                                         []
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.idle-timeout                                                      60.00s                                                                     60.00s
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.key-store-password                                                [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.key-store-path                                                    ----                                                                       ----
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.log.buffer-size                                                   1MB                                                                        1MB
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.log.compression.enabled                                           true                                                                       true
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.log.enabled                                                       false                                                                      false
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.log.flush-interval                                                10.00s                                                                     10.00s
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.log.max-history                                                   15                                                                         15
2025-08-13 17:42:19.746 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.log.max-size                                                      1GB                                                                        1GB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.log.path                                                          var/log/                                                                   var/log/                                                                   The name of the log file will be prefixed with the name of the HTTP client (<client_name>-http-client.log)
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.log.queue-size                                                    10000                                                                      10000
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.max-connections-per-server                                        250                                                                        250
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.max-content-length                                                16MB                                                                       16MB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.746Z	INFO	main	Bootstrap	scheduler.http-client.max-direct-memory                                                 ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.max-heap-memory                                                   ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.max-requests-queued-per-destination                               1024                                                                       1024
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.max-threads                                                       200                                                                        200
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.min-threads                                                       8                                                                          8
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.record-request-complete                                           true                                                                       true
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.request-buffer-size                                               4kB                                                                        4kB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.request-timeout                                                   20.00s                                                                     20.00s
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.response-buffer-size                                              16kB                                                                       16kB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.http-proxy.secure                                                 false                                                                      false
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.secure-random-algorithm                                           ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.selector-count                                                    2                                                                          2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.socks-proxy                                                       ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.tcp-keep-alive-idle-time                                          ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.timeout-concurrency                                               1                                                                          1                                                                          Number of concurrent locks for timeout
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.timeout-threads                                                   1                                                                          1                                                                          Total number of timeout threads
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.trust-store-password                                              [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.trust-store-path                                                  ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	scheduler.http-client.https.hostname-verification                                       true                                                                       true                                                                       Verify that server hostname matches the server certificate
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.https.automatic-shared-secret                                   [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.use-blocking-connect                                            false                                                                      false
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.connect-timeout                                                 5.00s                                                                      5.00s
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.destination-idle-timeout                                        1.00m                                                                      1.00m
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.http2.enabled                                                   false                                                                      false                                                                      Enable the HTTP/2 transport
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.http2.session-receive-window-size                               16MB                                                                       16MB                                                                       Initial size of session's flow control receive window for HTTP/2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.http2.stream-receive-window-size                                16MB                                                                       16MB                                                                       Initial size of stream's flow control receive window for HTTP/2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.http2.input-buffer-size                                         8kB                                                                        8kB                                                                        Size of the buffer used to read from the network for HTTP/2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.buffer-pool-type                                                DEFAULT                                                                    DEFAULT
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.http-proxy                                                      ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.http-proxy.password                                             [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.http-proxy.user                                                 ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.https.excluded-cipher                                           [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  [^.*_(MD5|SHA|SHA1)$, ^TLS_RSA_.*$, ^SSL_.*$, ^.*_NULL_.*$, ^.*_anon_.*$]  Setting this config property overwrites Jetty's default excluded cipher suites
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.https.included-cipher                                           []                                                                         []
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.idle-timeout                                                    1.00m                                                                      1.00m
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.key-store-password                                              [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.key-store-path                                                  ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.log.buffer-size                                                 1MB                                                                        1MB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.log.compression.enabled                                         true                                                                       true
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.log.enabled                                                     false                                                                      false
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.log.flush-interval                                              10.00s                                                                     10.00s
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.log.max-history                                                 15                                                                         15
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.log.max-size                                                    1GB                                                                        1GB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.log.path                                                        var/log/                                                                   var/log/                                                                   The name of the log file will be prefixed with the name of the HTTP client (<client_name>-http-client.log)
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.log.queue-size                                                  10000                                                                      10000
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.max-connections-per-server                                      20                                                                         20
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.max-content-length                                              16MB                                                                       16MB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.max-direct-memory                                               ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.max-heap-memory                                                 ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.max-requests-queued-per-destination                             1024                                                                       1024
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.max-threads                                                     200                                                                        200
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.min-threads                                                     8                                                                          8
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.record-request-complete                                         true                                                                       true
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.request-buffer-size                                             4kB                                                                        4kB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.request-timeout                                                 5.00m                                                                      5.00m
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.response-buffer-size                                            16kB                                                                       16kB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.http-proxy.secure                                               false                                                                      false
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.secure-random-algorithm                                         ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.selector-count                                                  2                                                                          2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.socks-proxy                                                     ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.tcp-keep-alive-idle-time                                        ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.timeout-concurrency                                             1                                                                          1                                                                          Number of concurrent locks for timeout
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.timeout-threads                                                 1                                                                          1                                                                          Total number of timeout threads
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.trust-store-password                                            [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.trust-store-path                                                ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	worker-info.http-client.https.hostname-verification                                     true                                                                       true                                                                       Verify that server hostname matches the server certificate
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.compression.enabled                                                         true                                                                       true
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.http2.session-receive-window-size                                           16MB                                                                       16MB                                                                       Initial size of session's flow control receive window for HTTP/2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.http2.stream-receive-window-size                                            16MB                                                                       16MB                                                                       Initial size of stream's flow control receive window for HTTP/2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.http2.input-buffer-size                                                     8kB                                                                        8kB                                                                        Size of the buffer used to read from the network for HTTP/2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.http2.max-concurrent-streams                                                32768                                                                      32768                                                                      Maximum concurrent streams per connection for HTTP/2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.http2.stream-idle-timeout                                                   15.00s                                                                     15.00s
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.accept-queue-size                                                           8000                                                                       8000
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.http.acceptor-threads                                                       ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.buffer-pool-type                                                            DEFAULT                                                                    DEFAULT
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.http.enabled                                                                true                                                                       true
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.http.port                                                                   8080                                                                       8080
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.http.selector-threads                                                       ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.https.acceptor-threads                                                      ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.https.enabled                                                               false                                                                      false
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.https.selector-threads                                                      ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.log.compression.enabled                                                     true                                                                       true
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.log.enabled                                                                 true                                                                       true
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.log.max-history                                                             15                                                                         15
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.log.immediate-flush                                                         false                                                                      false
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.log.max-size                                                                100MB                                                                      100MB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.log.path                                                                    var/log/http-request.log                                                   var/log/http-request.log
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.log.queue-size                                                              10000                                                                      10000
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.max-request-header-size                                                     2MB                                                                        2MB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.max-response-header-size                                                    2MB                                                                        2MB
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.threads.max                                                                 200                                                                        200
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.threads.min                                                                 2                                                                          2
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.net.max-idle-time                                                           200.00s                                                                    200.00s
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.output-buffer-size                                                          ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.process-forwarded                                                           REJECT                                                                     REJECT                                                                     Process Forwarded and X-Forwarded headers (for proxied environments)
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.show-stack-trace                                                            true                                                                       true                                                                       Show the stack trace when generating an error response
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	http-server.threads.max-idle-time                                                       1.00m                                                                      1.00m
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	jmx.rmiregistry.port                                                                    ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	jmx.rmiserver.port                                                                      ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.annotation-file                                                                    ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.binary-spec                                                                        ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.config-spec                                                                        ----                                                                       ----
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.environment                                                                        ----                                                                       docker
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.internal-address-source                                                            IP                                                                         IP
2025-08-13 17:42:19.747 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.location                                                                           ----                                                                       ----
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.bind-ip                                                                            ----                                                                       ----
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.external-address                                                                   ----                                                                       ----
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.id                                                                                 ----                                                                       e8cda387ec03
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.internal-address                                                                   ----                                                                       ----
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.747Z	INFO	main	Bootstrap	node.pool                                                                               general                                                                    general
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	openmetrics.jmx-object-names                                                            []                                                                         []                                                                         JMX object names to include when retrieving all metrics, separated by '|'
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	tracing.sampling-ratio                                                                  1.0                                                                        1.0
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	tracing.enabled                                                                         false                                                                      false
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	aggregation-operator-unspill-memory-limit                                               4MB                                                                        4MB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	experimental.columnar-filter-evaluation.enabled                                         true                                                                       true                                                                       Enables columnar evaluation of filters
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	exchange.compression-codec                                                              NONE                                                                       NONE                                                                       Compression codec used for data in exchanges
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	exchange.data-integrity-verification                                                    ABORT                                                                      ABORT
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-exchange-encryption-enabled                                    true                                                                       true
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	filter-and-project-min-output-page-row-count                                            256                                                                        256
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	filter-and-project-min-output-page-size                                                 500kB                                                                      500kB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	force-spilling-join-operator                                                            false                                                                      false                                                                      Force spilling join operator in favour of the non-spilling one even when there is no spill
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	hide-inaccessible-columns                                                               false                                                                      false                                                                      When enabled non-accessible columns are silently filtered from results from SELECT * statements
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	incremental-hash-array-load-factor.enabled                                              true                                                                       true                                                                       Use smaller load factor for small hash arrays in order to improve performance
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	deprecated.legacy-catalog-roles                                                         false                                                                      false                                                                      Enable legacy role management syntax that assumed all roles are catalog scoped
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	analyzer.max-grouping-sets                                                              2048                                                                       2048
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	max-memory-per-partition-writer                                                         256MB                                                                      256MB                                                                      Estimated maximum memory required per partition writer in a single thread
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	max-recursion-depth                                                                     10                                                                         10                                                                         Maximum recursion depth for recursive common table expression
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	memory-revoking-target                                                                  0.5                                                                        0.5                                                                        When revoking memory, try to revoke so much that pool is filled below target at the end
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	memory-revoking-threshold                                                               0.9                                                                        0.9                                                                        Revoke memory when memory pool is filled over threshold
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	deprecated.omit-datetime-type-precision                                                 false                                                                      false                                                                      Enable compatibility mode for legacy clients when rendering datetime type names with default precision
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	pages-index.eager-compaction-enabled                                                    false                                                                      false
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	re2j.dfa-retries                                                                        5                                                                          5
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	re2j.dfa-states-limit                                                                   2147483647                                                                 2147483647
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	redistribute-writes                                                                     true                                                                       true
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	deprecated.regex-library                                                                JONI                                                                       JONI
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	scale-writers                                                                           true                                                                       true
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	spill-enabled                                                                           false                                                                      false
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	spiller-max-used-space-threshold                                                        0.9                                                                        0.9
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	spiller-spill-path                                                                      []                                                                         []
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	spiller-threads                                                                         4                                                                          4
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	writer-scaling-min-data-processed                                                       120MB                                                                      120MB                                                                      Minimum amount of uncompressed output data processed by writers before writer scaling can happen
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	catalog.management                                                                      STATIC                                                                     STATIC
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	catalog.config-dir                                                                      etc/catalog                                                                etc/catalog
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	catalog.disabled-catalogs                                                               []                                                                         []
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	event.max-output-stage-size                                                             16MB                                                                       16MB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	event-listener.config-files                                                             []                                                                         []
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-row-filtering.selectivity-threshold                                             0.7                                                                        0.7                                                                        Avoid using dynamic row filters when fraction of rows selected is above threshold
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	enable-dynamic-filtering                                                                true                                                                       true
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	enable-dynamic-row-filtering                                                            true                                                                       true                                                                       Enable fine-grained filtering of rows in the scan operator using dynamic filters
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	enable-large-dynamic-filters                                                            true                                                                       true
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.large.max-distinct-values-per-driver                                  50000                                                                      50000
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.large.max-size-per-driver                                             4MB                                                                        4MB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.large.max-size-per-filter                                             10MB                                                                       10MB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.large.max-size-per-operator                                           5MB                                                                        5MB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.large-partitioned.max-distinct-values-per-driver                      20000                                                                      20000
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.large-partitioned.max-size-per-driver                                 200kB                                                                      200kB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.large-partitioned.max-size-per-operator                               5MB                                                                        5MB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.large-partitioned.range-row-limit-per-driver                          30000                                                                      30000
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.large.range-row-limit-per-driver                                      100000                                                                     100000
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.small.max-distinct-values-per-driver                                  1000                                                                       1000
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.small.max-size-per-driver                                             100kB                                                                      100kB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.small.max-size-per-filter                                             5MB                                                                        5MB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.small.max-size-per-operator                                           1MB                                                                        1MB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.small-partitioned.max-distinct-values-per-driver                      100                                                                        100
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.small-partitioned.max-size-per-driver                                 50kB                                                                       50kB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.small-partitioned.max-size-per-operator                               500kB                                                                      500kB
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.small-partitioned.range-row-limit-per-driver                          500                                                                        500
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	dynamic-filtering.small.range-row-limit-per-driver                                      2000                                                                       2000
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	query.client.timeout                                                                    5.00m                                                                      5.00m
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	query.determine-partition-count-for-write-enabled                                       false                                                                      false                                                                      Determine the number of partitions based on amount of data read and processed by the query for write queries
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	query.dispatcher-query-pool-size                                                        110                                                                        110
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	query.remote-task.enable-adaptive-request-size                                          true                                                                       true
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-adaptive-join-reordering-enabled                               true                                                                       true                                                                       Reorder partitioned join based on run time stats in fault tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-adaptive-join-reordering-min-size-threshold                    5GB                                                                        5GB                                                                        The minimum size of the right side of join to consider reordering
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-adaptive-join-reordering-size-difference-ratio                 1.5                                                                        1.5                                                                        The ratio of difference in estimated size of right and left side of join to consider reordering
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-adaptive-query-planning-enabled                                true                                                                       true                                                                       Enable adaptive query planning for the fault tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-arbitrary-distribution-compute-task-target-size-growth-factor  1.26                                                                       1.26                                                                       Growth factor for adaptive sizing of non-writer tasks of arbitrary distribution for fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-arbitrary-distribution-compute-task-target-size-growth-period  64                                                                         64                                                                         The number of tasks created for any given non-writer stage of arbitrary distribution before task size is increased
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-arbitrary-distribution-compute-task-target-size-max            50GB                                                                       50GB                                                                       Max target input size for non-writer task of arbitrary distribution of fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-arbitrary-distribution-compute-task-target-size-min            512MB                                                                      512MB                                                                      Initial/min target input size for non-writer tasks of arbitrary distribution of fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-arbitrary-distribution-write-task-target-size-growth-factor    1.26                                                                       1.26                                                                       Growth factor for adaptive sizing of writer tasks of arbitrary distribution for fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-arbitrary-distribution-write-task-target-size-growth-period    64                                                                         64                                                                         The number of tasks created for any given writer stage of arbitrary distribution before task size is increased
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-arbitrary-distribution-write-task-target-size-max              50GB                                                                       50GB                                                                       Max target input size for writer tasks of arbitrary distribution of fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-arbitrary-distribution-write-task-target-size-min              4GB                                                                        4GB                                                                        Initial/min target input size for writer tasks of arbitrary distribution of fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-hash-distribution-compute-task-target-size                     512MB                                                                      512MB                                                                      Target input size for non-writer tasks of hash distribution of fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-hash-distribution-compute-task-to-node-min-ratio               2.0                                                                        2.0                                                                        Minimal ratio of tasks count vs cluster nodes count for hash distributed compute stage in fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-hash-distribution-write-task-target-max-count                  2000                                                                       2000                                                                       Soft upper bound on number of writer tasks in a stage of hash distribution of fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-hash-distribution-write-task-target-size                       4GB                                                                        4GB                                                                        Target input size of writer tasks of hash distribution of fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-hash-distribution-write-task-to-node-min-ratio                 2.0                                                                        2.0                                                                        Minimal ratio of tasks count vs cluster nodes count for hash distributed writer stage in fault-tolerant execution
2025-08-13 17:42:19.748 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-max-partition-count                                            50                                                                         50                                                                         Maximum number of partitions for distributed joins and aggregations executed with fault tolerant execution enabled
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.748Z	INFO	main	Bootstrap	fault-tolerant-execution-max-task-split-count                                           2048                                                                       2048                                                                       Maximal number of splits for a single fault tolerant task (count based)
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-min-partition-count                                            4                                                                          4                                                                          Minimum number of partitions for distributed joins and aggregations executed with fault tolerant execution enabled
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-min-partition-count-for-write                                  50                                                                         50                                                                         Minimum number of partitions for distributed joins and aggregations in write queries executed with fault tolerant execution enabled
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-min-source-stage-progress                                      0.2                                                                        0.2                                                                        Minimal progress of source stage to consider scheduling of parent stage
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-runtime-adaptive-partitioning-enabled                          false                                                                      false
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-runtime-adaptive-partitioning-max-task-size                    12GB                                                                       12GB                                                                       Max average task input size when deciding runtime adaptive partitioning
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-runtime-adaptive-partitioning-partition-count                  1000                                                                       1000                                                                       The partition count to use for runtime adaptive partitioning when enabled
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-small-stage-estimation-enabled                                 true                                                                       true                                                                       Enable small stage estimation heuristic, used for more aggresive speculative stage scheduling
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-small-stage-estimation-threshold                               20GB                                                                       20GB                                                                       Threshold until which stage is considered small
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-small-stage-require-no-more-partitions                         false                                                                      false                                                                      Is it required for all stage partitions (tasks) to be enumerated for stage to be used in heuristic to determine if parent stage is small
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-small-stage-source-size-multiplier                             1.2                                                                        1.2                                                                        Multiplier used for heuristic estimation is stage is small; the bigger the more conservative estimation is
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-stage-estimation-for-eager-parent-enabled                      true                                                                       true                                                                       Enable aggressive stage output size estimation heuristic for children of stages to be executed eagerly
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-standard-split-size                                            64MB                                                                       64MB                                                                       Standard split size for a single fault tolerant task (split weight aware)
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-task-descriptor-storage-high-water-mark                        924089057B                                                                 924089057B                                                                 Compress the storage when task descriptors in memory are above given data size
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-task-descriptor-storage-low-water-mark                         616059371B                                                                 616059371B                                                                 Do not compress the storage when tasks descriptors in memory are below given data size
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	fault-tolerant-execution-task-descriptor-storage-max-memory                             1540148429B                                                                1540148429B                                                                Maximum amount of memory to be used to store task descriptors for fault tolerant queries on coordinator
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-concurrent-queries                                                            1000                                                                       1000
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-hash-partition-count                                                          100                                                                        100                                                                        Maximum number of partitions for distributed joins and aggregations
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-history                                                                       100                                                                        100
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-length                                                                        1000000                                                                    1000000
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-queued-queries                                                                5000                                                                       5000
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.remote-task.max-request-size                                                      8MB                                                                        8MB
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-split-manager-callback-threads                                                100                                                                        100                                                                        The maximum number of threads allowed to run splits generation callbacks concurrently
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-stage-count                                                                   150                                                                        150
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-state-machine-callback-threads                                                5                                                                          5                                                                          The maximum number of threads allowed to run query and stage state machine listener callbacks concurrently for each query
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	max-tasks-waiting-for-execution-per-query                                               10                                                                         10                                                                         Maximum number of tasks waiting to be scheduled per query. Split enumeration is paused by the scheduler when this threshold is crossed
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	max-tasks-waiting-for-node-per-query                                                    50                                                                         50                                                                         Maximum possible number of tasks waiting for node allocation per query before scheduling of new tasks for query is paused
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-writer-task-count                                                             100                                                                        100                                                                        Maximum number of tasks that will participate in writing data
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.min-hash-partition-count                                                          4                                                                          4                                                                          Minimum number of partitions for distributed joins and aggregations
2025-08-13 17:42:19.749 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.min-hash-partition-count-for-write                                                50                                                                         50                                                                         Minimum number of partitions for distributed joins and aggregations in write queries
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.min-expire-age                                                                    15.00m                                                                     15.00m
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.min-schedule-split-batch-size                                                     100                                                                        100
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.execution-policy                                                                  phased                                                                     phased
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.executor-pool-size                                                                1000                                                                       1000
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.manager-executor-pool-size                                                        5                                                                          5
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-cpu-time                                                                      1000000000.00d                                                             1000000000.00d
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-execution-time                                                                100.00d                                                                    100.00d
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.749Z	INFO	main	Bootstrap	query.max-planning-time                                                                 10.00m                                                                     10.00m
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.max-run-time                                                                      100.00d                                                                    100.00d
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.max-scan-physical-bytes                                                           ----                                                                       ----
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.reported-rule-stats-limit                                                         10                                                                         10
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query-retry-attempts                                                                    4                                                                          4
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.remote-task.guaranteed-splits-per-task                                            3                                                                          3
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.remote-task.max-callback-threads                                                  1000                                                                       1000
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.remote-task.max-error-duration                                                    1.00m                                                                      1.00m
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.remote-task.request-size-headroom                                                 2MB                                                                        2MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query-manager.required-workers                                                          1                                                                          1                                                                          Minimum number of active workers that must be available before a query will start
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query-manager.required-workers-max-wait                                                 5.00m                                                                      5.00m                                                                      Maximum time to wait for minimum number of workers before the query is failed
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	retry-delay-scale-factor                                                                2.0                                                                        2.0                                                                        Factor by which retry delay is scaled on subsequent failures
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	retry-initial-delay                                                                     10.00s                                                                     10.00s                                                                     Initial delay before initiating a retry attempt. Delay increases exponentially for each subsequent attempt up to 'retry_max_delay'
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	retry-max-delay                                                                         1.00m                                                                      1.00m                                                                      Maximum delay before initiating a retry attempt. Delay increases exponentially for each subsequent attempt starting from 'retry_initial_delay'
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	retry-policy                                                                            NONE                                                                       NONE
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.schedule-split-batch-size                                                         1000                                                                       1000
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.stage-count-warning-threshold                                                     50                                                                         50                                                                         Emit a warning when stage count exceeds this threshold
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task-retry-attempts-per-task                                                            4                                                                          4
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.client.timeout                                                                     2.00m                                                                      2.00m
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.driver-timeout-threads                                                             5                                                                          5                                                                          Number of threads used for timing out blocked drivers if the timeout is set
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.http-response-threads                                                              100                                                                        100
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.http-timeout-threads                                                               3                                                                          3
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.info.max-age                                                                       5.00m                                                                      5.00m
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.info-update-interval                                                               3.00s                                                                      3.00s                                                                      Interval between updating task data
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.initial-splits-per-node                                                            22                                                                         22
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.interrupt-stuck-split-tasks-detection-interval                                     2.00m                                                                      2.00m                                                                      Interval between detecting stuck split
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.interrupt-stuck-split-tasks-enabled                                                true                                                                       true
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.interrupt-stuck-split-tasks-timeout                                                15.00m                                                                     15.00m                                                                     Interrupt task processing thread after this timeout if the thread is stuck in certain external libraries used by Trino functions
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.interrupt-stuck-split-tasks-warning-threshold                                      10.00m                                                                     10.00m                                                                     Print out call stacks and generate JMX metrics for splits running longer than the threshold
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.level-time-multiplier                                                              2                                                                          2                                                                          Factor that determines the target scheduled time for a level relative to the next
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.max-drivers-per-task                                                               2147483647                                                                 2147483647                                                                 Maximum number of drivers a task can run
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.max-index-memory                                                                   64MB                                                                       64MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.max-local-exchange-buffer-size                                                     128MB                                                                      128MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	driver.max-page-partitioning-buffer-size                                                32MB                                                                       32MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.max-partial-aggregation-memory                                                     16MB                                                                       16MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.max-partial-top-n-memory                                                           16MB                                                                       16MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.max-worker-threads                                                                 22                                                                         22
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.max-writer-count                                                                   32                                                                         32                                                                         Maximum number of local parallel table writers per task when either task writer scaling or preferred partitioning is used
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.min-drivers                                                                        44                                                                         44
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.min-drivers-per-task                                                               3                                                                          3                                                                          Minimum number of drivers guaranteed to run per task given there is sufficient work to do
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.min-writer-count                                                                   1                                                                          1                                                                          Minimum number of local parallel table writers per task when preferred partitioning and task writer scaling are not used
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	driver.page-partitioning-buffer-pool-size                                               8                                                                          8                                                                          Maximum number of free buffers in the per task partitioned page buffer pool. Setting this to zero effectively disables the pool
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.per-operator-cpu-timer-enabled                                                     true                                                                       true
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.scale-writers.enabled                                                              true                                                                       true                                                                       Scale the number of concurrent table writers per task based on throughput
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.share-index-loading                                                                false                                                                      false
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	sink.max-broadcast-buffer-size                                                          200MB                                                                      200MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	sink.max-buffer-size                                                                    32MB                                                                       32MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.split-concurrency-adjustment-interval                                              100.00ms                                                                   100.00ms
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.statistics-cpu-timer-enabled                                                       true                                                                       true
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.status-refresh-max-wait                                                            1.00s                                                                      1.00s
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.concurrency                                                                        16                                                                         16                                                                         Default number of local parallel jobs per worker
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.cpu-timer-enabled                                                                  true                                                                       true
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.task-notification-threads                                                          5                                                                          5                                                                          Number of threads used for internal task event notifications
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.termination-timeout                                                                1.00m                                                                      1.00m                                                                      Maximum duration to wait for a task to complete termination before failing the task on the coordinator
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.task-yield-threads                                                                 3                                                                          3                                                                          Number of threads used for setting yield signals
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	experimental.thread-per-driver-scheduler-enabled                                        true                                                                       true
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.allowed-no-matching-node-period                                          2.00m                                                                      2.00m                                                                      How long scheduler should wait before failing a query for which hard task requirements (e.g. node exposing specific catalog) cannot be satisfied. Relevant for TASK retry policy only.
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.exhausted-node-wait-period                                               2.00m                                                                      2.00m                                                                      Maximum time to wait for resource availability on preferred nodes before scheduling a remotely accessible split on other nodes. Relevant for TASK retry policy only.
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.include-coordinator                                                      true                                                                       true
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.max-adjusted-pending-splits-per-task                                     2000                                                                       2000
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.max-splits-per-node                                                      256                                                                        256
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.max-unacknowledged-splits-per-task                                       2000                                                                       2000                                                                       Maximum number of leaf splits not yet delivered to a given task
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.min-candidates                                                           10                                                                         10
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.min-pending-splits-per-task                                              16                                                                         16
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.policy                                                                   UNIFORM                                                                    UNIFORM
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.optimized-local-scheduling                                               true                                                                       true
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	node-scheduler.splits-balancing-policy                                                  STAGE                                                                      STAGE                                                                      Strategy for balancing new splits on worker nodes
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	warning-collector.max-warnings                                                          2147483647                                                                 2147483647
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	failure-detector.enabled                                                                true                                                                       true
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	failure-detector.expiration-grace-interval                                              10.00m                                                                     10.00m                                                                     How long to wait before 'forgetting' a service after it disappears from discovery
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	failure-detector.threshold                                                              0.1                                                                        0.1
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	failure-detector.heartbeat-interval                                                     500.00ms                                                                   500.00ms
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	failure-detector.warmup-interval                                                        5.00s                                                                      5.00s                                                                      How long to wait after transitioning to success before considering a service alive
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	fault-tolerant-execution-coordinator-task-memory                                        2GB                                                                        2GB                                                                        Estimated amount of memory a single coordinator task will use when task level retries are used; value is used when allocating nodes for tasks execution
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	fault-tolerant-execution-eager-speculative-tasks-node-memory-overcommit                 20GB                                                                       20GB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	fault-tolerant-execution-memory-requirement-increase-on-worker-crash-enabled            true                                                                       true                                                                       Increase memory requirement for tasks failed due to a suspected worker crash
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	fault-tolerant-execution-task-memory                                                    5GB                                                                        5GB                                                                        Estimated amount of memory a single task will use when task level retries are used; value is used when allocating nodes for tasks execution
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	fault-tolerant-execution-task-memory-estimation-quantile                                0.9                                                                        0.9                                                                        What quantile of memory usage of completed tasks to look at when estimating memory usage for upcoming tasks
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	fault-tolerant-execution-task-memory-growth-factor                                      3.0                                                                        3.0                                                                        Factor by which estimated task memory is increased if task execution runs out of memory; value is used allocating nodes for tasks execution
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	fault-tolerant-execution-task-runtime-memory-estimation-overhead                        1GB                                                                        1GB                                                                        Extra memory to account for when estimating actual task runtime memory consumption
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.low-memory-killer.policy                                                          TOTAL_RESERVATION_ON_BLOCKED_NODES                                         TOTAL_RESERVATION_ON_BLOCKED_NODES
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	task.low-memory-killer.policy                                                           TOTAL_RESERVATION_ON_BLOCKED_NODES                                         TOTAL_RESERVATION_ON_BLOCKED_NODES
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.max-memory                                                                        20GB                                                                       20GB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.max-total-memory                                                                  40GB                                                                       40GB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	memory.heap-headroom-per-node                                                           3080296858B                                                                3080296858B                                                                The amount of heap memory to set aside as headroom/buffer (e.g., for untracked allocations)
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	query.max-memory-per-node                                                               3080296858B                                                                3080296858B
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	exchange.acknowledge-pages                                                              true                                                                       true
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	exchange.client-threads                                                                 25                                                                         25
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	exchange.concurrent-request-multiplier                                                  3                                                                          3
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	exchange.deduplication-buffer-size                                                      32MB                                                                       32MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	exchange.max-buffer-size                                                                32MB                                                                       32MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	exchange.max-error-duration                                                             1.00m                                                                      1.00m
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	exchange.max-response-size                                                              16MB                                                                       16MB
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	exchange.page-buffer-client.max-callback-threads                                        25                                                                         25
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	access-control.config-files                                                             []                                                                         []
2025-08-13 17:42:19.750 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	discovery-server.enabled                                                                true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	internal-communication.http2.enabled                                                    false                                                                      false                                                                      Enable the HTTP/2 transport
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	internal-communication.https.required                                                   false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	internal-communication.https.keystore.key                                               [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.750Z	INFO	main	Bootstrap	internal-communication.https.keystore.path                                              ----                                                                       ----
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	internal-communication.shared-secret                                                    [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	internal-communication.https.truststore.key                                             [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	internal-communication.https.truststore.path                                            ----                                                                       ----
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	jmx.base-name                                                                           trino                                                                      trino
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	protocol.v1.alternate-header-name                                                       ----                                                                       ----                                                                       Alternate header name for V1 protocol
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	protocol.v1.prepared-statement-compression.min-gain                                     512                                                                        512                                                                        Prepared statement compression is not applied if the size gain is less than the configured value
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	protocol.v1.prepared-statement-compression.length-threshold                             2048                                                                       2048                                                                       Compression is applied to prepared statements longer than the configured value
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	experimental.concurrent-startup                                                         false                                                                      false                                                                      Parallelize work during server startup
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	coordinator                                                                             true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	shutdown.grace-period                                                                   2.00m                                                                      2.00m
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	http.include-exception-in-response                                                      true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	query.info-url-template                                                                 ----                                                                       ----
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	query-results.compression-enabled                                                       true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	plugin.dir                                                                              plugin                                                                     plugin
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	protocol.spooling.encoding.compression.threshold                                        8kB                                                                        8kB                                                                        Do not compress segments smaller than threshold
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	protocol.spooling.encoding.json.enabled                                                 true                                                                       true                                                                       Enable uncompressed json spooled encoding
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	protocol.spooling.encoding.json+lz4.enabled                                             true                                                                       true                                                                       Enable LZ4 compressed json spooled encoding
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	protocol.spooling.encoding.json+zstd.enabled                                            true                                                                       true                                                                       Enable Zstd compressed json spooled encoding
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	protocol.spooling.enabled                                                               false                                                                      false                                                                      Enable spooling protocol
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	http-server.authentication.insecure.user-mapping.file                                   ----                                                                       ----
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	http-server.authentication.insecure.user-mapping.pattern                                ----                                                                       ----
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	http-server.authentication.type                                                         [insecure]                                                                 [insecure]                                                                 Ordered list of authentication types
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	management.user                                                                         ----                                                                       ----                                                                       Optional fixed user for all requests to management endpoints
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	management.user.https-enabled                                                           false                                                                      false                                                                      Use fixed management user for secure HTTPS requests
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	http-server.authentication.allow-insecure-over-http                                     true                                                                       true                                                                       Insecure authentication over HTTP (non-secure) enabled
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	web-ui.session-timeout                                                                  1.00d                                                                      1.00d
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	web-ui.shared-secret                                                                    [REDACTED]                                                                 [REDACTED]
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	web-ui.authentication.type                                                              ----                                                                       ----                                                                       Authentication type for the web ui
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	web-ui.enabled                                                                          true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	web-ui.preview.enabled                                                                  false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	max-spill-per-node                                                                      100GB                                                                      100GB
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	query-max-spill-per-node                                                                100GB                                                                      100GB
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	spill-compression-codec                                                                 NONE                                                                       NONE                                                                       Compression codec used for data in spills
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	spill-encryption-enabled                                                                false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	sql.default-catalog                                                                     ----                                                                       ----
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	sql.default-function-catalog                                                            ----                                                                       ----
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	sql.default-function-schema                                                             ----                                                                       ----
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	sql.default-schema                                                                      ----                                                                       ----
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	sql.forced-session-time-zone                                                            ----                                                                       ----                                                                       User session time zone overriding value sent by client
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	sql.path
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	compiler.expression-cache-size                                                          10000                                                                      10000                                                                      Reuse compiled expressions across multiple queries
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	compiler.specialized-aggregation-loops                                                  true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	adaptive-partial-aggregation.enabled                                                    true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	adaptive-partial-aggregation.unique-rows-ratio-threshold                                0.8                                                                        0.8                                                                        Ratio between aggregation output and input rows above which partial aggregation might be adaptively turned off
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	collect-plan-statistics-for-all-queries                                                 false                                                                      false                                                                      Collect plan statistics for non-EXPLAIN queries
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	colocated-joins-enabled                                                                 true                                                                       true                                                                       Use a colocated join when possible
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.complex-expression-pushdown.enabled                                           true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	cpu-cost-weight                                                                         75.0                                                                       75.0
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.default-filter-factor-enabled                                                 false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.dictionary-aggregation                                                        false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.distinct-aggregations-strategy                                                ----                                                                       ----                                                                       Strategy to use for distinct aggregations
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	distributed-sort                                                                        true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	enable-forced-exchange-below-group-id                                                   true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.enable-intermediate-aggregations                                              false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	enable-stats-calculator                                                                 true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.filter-conjunction-independence-factor                                        0.75                                                                       0.75                                                                       Scales the strength of independence assumption for selectivity estimates of the conjunction of multiple filters
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.force-single-node-output                                                      false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.ignore-downstream-preferences                                                 false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.ignore-stats-calculator-failures                                              true                                                                       true                                                                       Ignore statistics calculator failures
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	iterative-optimizer-timeout                                                             3.00m                                                                      3.00m
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	join-distribution-type                                                                  AUTOMATIC                                                                  AUTOMATIC
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	join-max-broadcast-table-size                                                           100MB                                                                      100MB                                                                      Maximum estimated size of a table that can be broadcast when using automatic join type selection
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.join-multi-clause-independence-factor                                         0.25                                                                       0.25                                                                       Scales the strength of independence assumption for selectivity estimates of multi-clause joins
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.join-partitioned-build-min-row-count                                          1000000                                                                    1000000                                                                    Minimum number of join build side rows required to use partitioned join lookup
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.join-reordering-strategy                                                      AUTOMATIC                                                                  AUTOMATIC                                                                  The strategy to use for reordering joins
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.max-reordered-joins                                                           8                                                                          8                                                                          The maximum number of tables to reorder in cost-based join reordering
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	memory-cost-weight                                                                      10.0                                                                       10.0
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.merge-project-with-values                                                     true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.min-input-rows-per-task                                                       10000000                                                                   10000000                                                                   Minimum input rows required per task. This will help optimizer determine hash partition count for joins and aggregations
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.min-input-size-per-task                                                       5GB                                                                        5GB                                                                        Minimum input data size required per task. This will help optimizer determine hash partition count for joins and aggregations
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	network-cost-weight                                                                     15.0                                                                       15.0
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.non-estimatable-predicate-approximation.enabled                               true                                                                       true                                                                       Approximate the cost of filters which cannot be accurately estimated even with complete statistics
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.optimize-duplicate-insensitive-joins                                          true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.optimize-metadata-queries                                                     false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.optimize-top-n-ranking                                                        true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.pre-aggregate-case-aggregations.enabled                                       true                                                                       true                                                                       Pre-aggregate rows before GROUP BY with multiple CASE aggregations on same column
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.predicate-pushdown-use-table-properties                                       true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.prefer-partial-aggregation                                                    true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.push-aggregation-through-outer-join                                           true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.push-filter-into-values-max-row-count                                         100                                                                        100                                                                        Maximum number of rows in values for which filter is pushed down into values
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.push-partial-aggregation-through-join                                         true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.push-table-write-through-union                                                true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.rewrite-filtering-semi-join-to-inner-join                                     true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.skip-redundant-sort                                                           true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	spatial-joins-enabled                                                                   true                                                                       true                                                                       Use spatial index for spatial joins when possible
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	statistics-precalculation-for-pushdown.enabled                                          true                                                                       true
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.table-scan-node-partitioning-min-bucket-to-task-ratio                         0.5                                                                        0.5                                                                        Min table scan bucket to task ratio for which plan will be adopted to node pre-partitioned tables
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.allow-unsafe-pushdown                                                         false                                                                      false                                                                      Allow pushing down expressions that mail fail for some inputs
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.use-cost-based-partitioning                                                   true                                                                       true                                                                       When enabled the cost based optimizer is used to determine if repartitioning the output of an already partitioned stage is necessary
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.use-exact-partitioning                                                        false                                                                      false                                                                      When enabled this forces data repartitioning unless the partitioning of upstream stage matches exactly what downstream stage expects
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.use-legacy-window-filter-pushdown                                             false                                                                      false
2025-08-13 17:42:19.751 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	use-preferred-write-partitioning                                                        true                                                                       true
2025-08-13 17:42:19.752 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	optimizer.use-table-scan-node-partitioning                                              true                                                                       true                                                                       Adapt plan to node pre-partitioned tables
2025-08-13 17:42:19.752 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	transaction.idle-check-interval                                                         1.00m                                                                      1.00m                                                                      Time interval between idle transactions checks
2025-08-13 17:42:19.752 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	transaction.idle-timeout                                                                5.00m                                                                      5.00m                                                                      Amount of time before an inactive transaction is considered expired
2025-08-13 17:42:19.752 | 2025-08-13T10:42:19.751Z	INFO	main	Bootstrap	transaction.max-finishing-concurrency                                                   1                                                                          1                                                                          Maximum parallelism for committing or aborting a transaction
2025-08-13 17:42:21.813 | 2025-08-13T10:42:21.812Z	INFO	main	org.eclipse.jetty.server.Server	jetty-12.0.19; built: 2025-04-01T13:28:40.005Z; git: 23436cd577b4238238eb192683dfc2b1476c6b87; jvm 24+36
2025-08-13 17:42:21.842 | 2025-08-13T10:42:21.841Z	INFO	main	org.eclipse.jetty.server.handler.ContextHandler	Started oeje10s.ServletContextHandler@19f99aaf{ROOT,/,b=null,a=AVAILABLE,vh=[@http,@https],h=GzipHandler@49f41c2e{STARTED,min=32,inflate=-1}}
2025-08-13 17:42:22.184 | 2025-08-13T10:42:22.184Z	INFO	main	org.eclipse.jetty.ee10.servlet.ServletContextHandler	Started oeje10s.ServletContextHandler@19f99aaf{ROOT,/,b=null,a=AVAILABLE,vh=[@http,@https],h=GzipHandler@49f41c2e{STARTED,min=32,inflate=-1}}
2025-08-13 17:42:22.186 | 2025-08-13T10:42:22.186Z	INFO	main	org.eclipse.jetty.jmx.MetaData	Getter/setter type mismatch for mbean attribute formEncodedMethods in class org.eclipse.jetty.server.HttpConfiguration, attribute will be read-only
2025-08-13 17:42:22.191 | 2025-08-13T10:42:22.190Z	INFO	main	org.eclipse.jetty.server.AbstractConnector	Started http@52e92f6{HTTP/1.1, (http/1.1, h2c)}{0.0.0.0:8080}
2025-08-13 17:42:22.192 | 2025-08-13T10:42:22.192Z	INFO	main	org.eclipse.jetty.server.Server	Started oejs.Server@7455204c{STARTING}[12.0.19,sto=0] @4082ms
2025-08-13 17:42:23.159 | 2025-08-13T10:42:23.158Z	INFO	main	io.trino.server.Server	Trino version: 475
2025-08-13 17:42:23.168 | WARNING: A restricted method in java.lang.foreign.SymbolLookup has been called
2025-08-13 17:42:23.168 | WARNING: java.lang.foreign.SymbolLookup::libraryLookup has been called by io.airlift.compress.v3.internal.NativeLoader in an unnamed module (file:/usr/lib/trino/lib/io.airlift_aircompressor-v3-3.2.jar)
2025-08-13 17:42:23.168 | WARNING: Use --enable-native-access=ALL-UNNAMED to avoid a warning for callers in this module
2025-08-13 17:42:23.168 | WARNING: Restricted methods will be blocked in a future release unless native access is enabled
2025-08-13 17:42:23.168 | 
2025-08-13 17:42:23.213 | 2025-08-13T10:42:23.213Z	INFO	main	io.trino.server.Server	Zstandard native compression: enabled
2025-08-13 17:42:23.220 | 2025-08-13T10:42:23.220Z	INFO	main	io.trino.server.Server	Lz4 native compression: enabled
2025-08-13 17:42:23.228 | 2025-08-13T10:42:23.228Z	INFO	main	io.trino.server.Server	Snappy native compression: enabled
2025-08-13 17:42:23.228 | 2025-08-13T10:42:23.228Z	INFO	main	io.trino.server.Server	Working directory: /data/trino
2025-08-13 17:42:23.228 | 2025-08-13T10:42:23.228Z	INFO	main	io.trino.server.Server	Etc directory: /etc/trino
2025-08-13 17:42:23.230 | 2025-08-13T10:42:23.230Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/ai-functions --
2025-08-13 17:42:23.236 | 2025-08-13T10:42:23.236Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.ai.functions.AiPlugin
2025-08-13 17:42:23.240 | 2025-08-13T10:42:23.240Z	INFO	main	io.trino.server.PluginManager	Registering connector ai
2025-08-13 17:42:23.241 | 2025-08-13T10:42:23.241Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/ai-functions --
2025-08-13 17:42:23.241 | 2025-08-13T10:42:23.241Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/bigquery --
2025-08-13 17:42:23.286 | 2025-08-13T10:42:23.286Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.bigquery.BigQueryPlugin
2025-08-13 17:42:23.289 | 2025-08-13T10:42:23.289Z	INFO	main	io.trino.server.PluginManager	Registering connector bigquery
2025-08-13 17:42:23.290 | 2025-08-13T10:42:23.290Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/bigquery --
2025-08-13 17:42:23.291 | 2025-08-13T10:42:23.290Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/blackhole --
2025-08-13 17:42:23.298 | 2025-08-13T10:42:23.295Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.blackhole.BlackHolePlugin
2025-08-13 17:42:23.302 | 2025-08-13T10:42:23.301Z	INFO	main	io.trino.server.PluginManager	Registering connector blackhole
2025-08-13 17:42:23.303 | 2025-08-13T10:42:23.303Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/blackhole --
2025-08-13 17:42:23.303 | 2025-08-13T10:42:23.303Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/cassandra --
2025-08-13 17:42:23.312 | 2025-08-13T10:42:23.311Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.cassandra.CassandraPlugin
2025-08-13 17:42:23.317 | 2025-08-13T10:42:23.317Z	INFO	main	io.trino.server.PluginManager	Registering connector cassandra
2025-08-13 17:42:23.317 | 2025-08-13T10:42:23.317Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/cassandra --
2025-08-13 17:42:23.317 | 2025-08-13T10:42:23.317Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/clickhouse --
2025-08-13 17:42:23.326 | 2025-08-13T10:42:23.326Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.clickhouse.ClickHousePlugin
2025-08-13 17:42:23.329 | 2025-08-13T10:42:23.329Z	INFO	main	io.trino.server.PluginManager	Registering connector clickhouse
2025-08-13 17:42:23.330 | 2025-08-13T10:42:23.330Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/clickhouse --
2025-08-13 17:42:23.330 | 2025-08-13T10:42:23.330Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/delta-lake --
2025-08-13 17:42:23.366 | 2025-08-13T10:42:23.366Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.deltalake.DeltaLakePlugin
2025-08-13 17:42:23.371 | 2025-08-13T10:42:23.371Z	INFO	main	io.trino.server.PluginManager	Registering connector delta_lake
2025-08-13 17:42:23.371 | 2025-08-13T10:42:23.371Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/delta-lake --
2025-08-13 17:42:23.371 | 2025-08-13T10:42:23.371Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/druid --
2025-08-13 17:42:23.377 | 2025-08-13T10:42:23.377Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.druid.DruidJdbcPlugin
2025-08-13 17:42:23.380 | 2025-08-13T10:42:23.380Z	INFO	main	io.trino.server.PluginManager	Registering connector druid
2025-08-13 17:42:23.380 | 2025-08-13T10:42:23.380Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/druid --
2025-08-13 17:42:23.380 | 2025-08-13T10:42:23.380Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/duckdb --
2025-08-13 17:42:23.386 | 2025-08-13T10:42:23.386Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.duckdb.DuckDbPlugin
2025-08-13 17:42:23.388 | 2025-08-13T10:42:23.388Z	INFO	main	io.trino.server.PluginManager	Registering connector duckdb
2025-08-13 17:42:23.389 | 2025-08-13T10:42:23.389Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/duckdb --
2025-08-13 17:42:23.389 | 2025-08-13T10:42:23.389Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/elasticsearch --
2025-08-13 17:42:23.397 | 2025-08-13T10:42:23.397Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.elasticsearch.ElasticsearchPlugin
2025-08-13 17:42:23.401 | 2025-08-13T10:42:23.400Z	INFO	main	io.trino.server.PluginManager	Registering connector elasticsearch
2025-08-13 17:42:23.401 | 2025-08-13T10:42:23.401Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/elasticsearch --
2025-08-13 17:42:23.401 | 2025-08-13T10:42:23.401Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/example-http --
2025-08-13 17:42:23.404 | 2025-08-13T10:42:23.404Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.example.ExamplePlugin
2025-08-13 17:42:23.408 | 2025-08-13T10:42:23.408Z	INFO	main	io.trino.server.PluginManager	Registering connector example_http
2025-08-13 17:42:23.408 | 2025-08-13T10:42:23.408Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/example-http --
2025-08-13 17:42:23.408 | 2025-08-13T10:42:23.408Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/exasol --
2025-08-13 17:42:23.415 | 2025-08-13T10:42:23.415Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.exasol.ExasolPlugin
2025-08-13 17:42:23.417 | 2025-08-13T10:42:23.417Z	INFO	main	io.trino.server.PluginManager	Registering connector exasol
2025-08-13 17:42:23.417 | 2025-08-13T10:42:23.417Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/exasol --
2025-08-13 17:42:23.417 | 2025-08-13T10:42:23.417Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/exchange-filesystem --
2025-08-13 17:42:23.426 | 2025-08-13T10:42:23.426Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.exchange.filesystem.FileSystemExchangePlugin
2025-08-13 17:42:23.429 | 2025-08-13T10:42:23.429Z	INFO	main	io.trino.server.PluginManager	Registering exchange manager filesystem
2025-08-13 17:42:23.429 | 2025-08-13T10:42:23.429Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/exchange-filesystem --
2025-08-13 17:42:23.430 | 2025-08-13T10:42:23.429Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/exchange-hdfs --
2025-08-13 17:42:23.444 | 2025-08-13T10:42:23.443Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.exchange.hdfs.HdfsExchangePlugin
2025-08-13 17:42:23.448 | 2025-08-13T10:42:23.448Z	INFO	main	io.trino.server.PluginManager	Registering exchange manager hdfs
2025-08-13 17:42:23.448 | 2025-08-13T10:42:23.448Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/exchange-hdfs --
2025-08-13 17:42:23.449 | 2025-08-13T10:42:23.448Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/faker --
2025-08-13 17:42:23.453 | 2025-08-13T10:42:23.453Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.faker.FakerPlugin
2025-08-13 17:42:23.456 | 2025-08-13T10:42:23.456Z	INFO	main	io.trino.server.PluginManager	Registering connector faker
2025-08-13 17:42:23.457 | 2025-08-13T10:42:23.457Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/faker --
2025-08-13 17:42:23.457 | 2025-08-13T10:42:23.457Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/functions-python --
2025-08-13 17:42:23.460 | 2025-08-13T10:42:23.460Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.functions.python.PythonFunctionsPlugin
2025-08-13 17:42:23.461 | 2025-08-13T10:42:23.461Z	INFO	main	io.trino.server.PluginManager	Registering language function engine PYTHON
2025-08-13 17:42:23.462 | 2025-08-13T10:42:23.462Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/functions-python --
2025-08-13 17:42:23.462 | 2025-08-13T10:42:23.462Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/geospatial --
2025-08-13 17:42:23.463 | 2025-08-13T10:42:23.463Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.geospatial.GeoPlugin
2025-08-13 17:42:23.467 | 2025-08-13T10:42:23.467Z	INFO	main	io.trino.server.PluginManager	Registering type Geometry
2025-08-13 17:42:23.467 | 2025-08-13T10:42:23.467Z	INFO	main	io.trino.server.PluginManager	Registering type BingTile
2025-08-13 17:42:23.467 | 2025-08-13T10:42:23.467Z	INFO	main	io.trino.server.PluginManager	Registering type KdbTree
2025-08-13 17:42:23.467 | 2025-08-13T10:42:23.467Z	INFO	main	io.trino.server.PluginManager	Registering type SphericalGeography
2025-08-13 17:42:23.471 | 2025-08-13T10:42:23.471Z	INFO	main	io.trino.server.PluginManager	Registering functions from GeoPlugin
2025-08-13 17:42:23.486 | 2025-08-13T10:42:23.485Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/geospatial --
2025-08-13 17:42:23.486 | 2025-08-13T10:42:23.485Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/google-sheets --
2025-08-13 17:42:23.489 | 2025-08-13T10:42:23.489Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.google.sheets.SheetsPlugin
2025-08-13 17:42:23.492 | 2025-08-13T10:42:23.492Z	INFO	main	io.trino.server.PluginManager	Registering connector gsheets
2025-08-13 17:42:23.492 | 2025-08-13T10:42:23.492Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/google-sheets --
2025-08-13 17:42:23.492 | 2025-08-13T10:42:23.492Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/hive --
2025-08-13 17:42:23.506 | 2025-08-13T10:42:23.506Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.hive.HivePlugin
2025-08-13 17:42:23.509 | 2025-08-13T10:42:23.509Z	INFO	main	io.trino.server.PluginManager	Registering connector hive
2025-08-13 17:42:23.510 | 2025-08-13T10:42:23.510Z	INFO	main	io.trino.server.PluginManager	Registering functions from HivePlugin
2025-08-13 17:42:23.512 | 2025-08-13T10:42:23.512Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/hive --
2025-08-13 17:42:23.512 | 2025-08-13T10:42:23.512Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/http-event-listener --
2025-08-13 17:42:23.515 | 2025-08-13T10:42:23.514Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.httpquery.HttpEventListenerPlugin
2025-08-13 17:42:23.515 | 2025-08-13T10:42:23.515Z	INFO	main	io.trino.server.PluginManager	Registering event listener http
2025-08-13 17:42:23.515 | 2025-08-13T10:42:23.515Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/http-event-listener --
2025-08-13 17:42:23.515 | 2025-08-13T10:42:23.515Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/http-server-event-listener --
2025-08-13 17:42:23.519 | 2025-08-13T10:42:23.519Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.httpquery.HttpServerEventListenerPlugin
2025-08-13 17:42:23.519 | 2025-08-13T10:42:23.519Z	INFO	main	io.trino.server.PluginManager	Registering event listener http-server
2025-08-13 17:42:23.519 | 2025-08-13T10:42:23.519Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/http-server-event-listener --
2025-08-13 17:42:23.519 | 2025-08-13T10:42:23.519Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/hudi --
2025-08-13 17:42:23.532 | 2025-08-13T10:42:23.532Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.hudi.HudiPlugin
2025-08-13 17:42:23.536 | 2025-08-13T10:42:23.535Z	INFO	main	io.trino.server.PluginManager	Registering connector hudi
2025-08-13 17:42:23.536 | 2025-08-13T10:42:23.536Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/hudi --
2025-08-13 17:42:23.536 | 2025-08-13T10:42:23.536Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/iceberg --
2025-08-13 17:42:23.553 | 2025-08-13T10:42:23.553Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.iceberg.IcebergPlugin
2025-08-13 17:42:23.556 | 2025-08-13T10:42:23.556Z	INFO	main	io.trino.server.PluginManager	Registering connector iceberg
2025-08-13 17:42:23.557 | 2025-08-13T10:42:23.557Z	INFO	main	io.trino.server.PluginManager	Registering functions from IcebergPlugin
2025-08-13 17:42:23.560 | 2025-08-13T10:42:23.560Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/iceberg --
2025-08-13 17:42:23.560 | 2025-08-13T10:42:23.560Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/ignite --
2025-08-13 17:42:23.566 | 2025-08-13T10:42:23.566Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.ignite.IgnitePlugin
2025-08-13 17:42:23.568 | 2025-08-13T10:42:23.568Z	INFO	main	io.trino.server.PluginManager	Registering connector ignite
2025-08-13 17:42:23.569 | 2025-08-13T10:42:23.569Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/ignite --
2025-08-13 17:42:23.569 | 2025-08-13T10:42:23.569Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/jmx --
2025-08-13 17:42:23.571 | 2025-08-13T10:42:23.571Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.jmx.JmxPlugin
2025-08-13 17:42:23.574 | 2025-08-13T10:42:23.574Z	INFO	main	io.trino.server.PluginManager	Registering connector jmx
2025-08-13 17:42:23.574 | 2025-08-13T10:42:23.574Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/jmx --
2025-08-13 17:42:23.574 | 2025-08-13T10:42:23.574Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/kafka --
2025-08-13 17:42:23.582 | 2025-08-13T10:42:23.582Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.kafka.KafkaPlugin
2025-08-13 17:42:23.584 | 2025-08-13T10:42:23.583Z	INFO	main	io.trino.server.PluginManager	Registering connector kafka
2025-08-13 17:42:23.584 | 2025-08-13T10:42:23.584Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/kafka --
2025-08-13 17:42:23.584 | 2025-08-13T10:42:23.584Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/kafka-event-listener --
2025-08-13 17:42:23.589 | 2025-08-13T10:42:23.588Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.eventlistener.kafka.KafkaEventListenerPlugin
2025-08-13 17:42:23.591 | 2025-08-13T10:42:23.591Z	INFO	main	io.trino.server.PluginManager	Registering event listener kafka
2025-08-13 17:42:23.592 | 2025-08-13T10:42:23.591Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/kafka-event-listener --
2025-08-13 17:42:23.592 | 2025-08-13T10:42:23.592Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/ldap-group-provider --
2025-08-13 17:42:23.594 | 2025-08-13T10:42:23.594Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.ldapgroup.LdapGroupProviderPlugin
2025-08-13 17:42:23.597 | 2025-08-13T10:42:23.597Z	INFO	main	io.trino.server.PluginManager	Registering group provider ldap
2025-08-13 17:42:23.597 | 2025-08-13T10:42:23.597Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/ldap-group-provider --
2025-08-13 17:42:23.597 | 2025-08-13T10:42:23.597Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/loki --
2025-08-13 17:42:23.600 | 2025-08-13T10:42:23.599Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.loki.LokiPlugin
2025-08-13 17:42:23.602 | 2025-08-13T10:42:23.602Z	INFO	main	io.trino.server.PluginManager	Registering connector loki
2025-08-13 17:42:23.602 | 2025-08-13T10:42:23.602Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/loki --
2025-08-13 17:42:23.602 | 2025-08-13T10:42:23.602Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/mariadb --
2025-08-13 17:42:23.607 | 2025-08-13T10:42:23.607Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.mariadb.MariaDbPlugin
2025-08-13 17:42:23.609 | 2025-08-13T10:42:23.609Z	INFO	main	io.trino.server.PluginManager	Registering connector mariadb
2025-08-13 17:42:23.610 | 2025-08-13T10:42:23.609Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/mariadb --
2025-08-13 17:42:23.610 | 2025-08-13T10:42:23.609Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/memory --
2025-08-13 17:42:23.612 | 2025-08-13T10:42:23.612Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.memory.MemoryPlugin
2025-08-13 17:42:23.615 | 2025-08-13T10:42:23.615Z	INFO	main	io.trino.server.PluginManager	Registering connector memory
2025-08-13 17:42:23.615 | 2025-08-13T10:42:23.615Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/memory --
2025-08-13 17:42:23.615 | 2025-08-13T10:42:23.615Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/ml --
2025-08-13 17:42:23.617 | 2025-08-13T10:42:23.617Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.ml.MLPlugin
2025-08-13 17:42:23.620 | 2025-08-13T10:42:23.620Z	INFO	main	io.trino.server.PluginManager	Registering type Model
2025-08-13 17:42:23.620 | 2025-08-13T10:42:23.620Z	INFO	main	io.trino.server.PluginManager	Registering type Regressor
2025-08-13 17:42:23.620 | 2025-08-13T10:42:23.620Z	INFO	main	io.trino.server.PluginManager	Registering parametric type Classifier
2025-08-13 17:42:23.624 | 2025-08-13T10:42:23.623Z	INFO	main	io.trino.server.PluginManager	Registering functions from MLPlugin
2025-08-13 17:42:23.708 | 2025-08-13T10:42:23.708Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/ml --
2025-08-13 17:42:23.708 | 2025-08-13T10:42:23.708Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/mongodb --
2025-08-13 17:42:23.712 | 2025-08-13T10:42:23.712Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.mongodb.MongoPlugin
2025-08-13 17:42:23.715 | 2025-08-13T10:42:23.715Z	INFO	main	io.trino.server.PluginManager	Registering type ObjectId
2025-08-13 17:42:23.716 | 2025-08-13T10:42:23.716Z	INFO	main	io.trino.server.PluginManager	Registering connector mongodb
2025-08-13 17:42:23.717 | 2025-08-13T10:42:23.717Z	INFO	main	io.trino.server.PluginManager	Registering functions from MongoPlugin
2025-08-13 17:42:23.720 | 2025-08-13T10:42:23.719Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/mongodb --
2025-08-13 17:42:23.720 | 2025-08-13T10:42:23.719Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/mysql --
2025-08-13 17:42:23.725 | 2025-08-13T10:42:23.725Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.mysql.MySqlPlugin
2025-08-13 17:42:23.727 | 2025-08-13T10:42:23.727Z	INFO	main	io.trino.server.PluginManager	Registering connector mysql
2025-08-13 17:42:23.728 | 2025-08-13T10:42:23.728Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/mysql --
2025-08-13 17:42:23.728 | 2025-08-13T10:42:23.728Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/mysql-event-listener --
2025-08-13 17:42:23.730 | 2025-08-13T10:42:23.730Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.eventlistener.mysql.MysqlEventListenerPlugin
2025-08-13 17:42:23.733 | 2025-08-13T10:42:23.733Z	INFO	main	io.trino.server.PluginManager	Registering event listener mysql
2025-08-13 17:42:23.733 | 2025-08-13T10:42:23.733Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/mysql-event-listener --
2025-08-13 17:42:23.733 | 2025-08-13T10:42:23.733Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/opa --
2025-08-13 17:42:23.737 | 2025-08-13T10:42:23.737Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.opa.OpaAccessControlPlugin
2025-08-13 17:42:23.740 | 2025-08-13T10:42:23.740Z	INFO	main	io.trino.server.PluginManager	Registering system access control opa
2025-08-13 17:42:23.740 | 2025-08-13T10:42:23.740Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/opa --
2025-08-13 17:42:23.740 | 2025-08-13T10:42:23.740Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/openlineage --
2025-08-13 17:42:23.743 | 2025-08-13T10:42:23.743Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.openlineage.OpenLineagePlugin
2025-08-13 17:42:23.746 | 2025-08-13T10:42:23.745Z	INFO	main	io.trino.server.PluginManager	Registering event listener openlineage
2025-08-13 17:42:23.746 | 2025-08-13T10:42:23.746Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/openlineage --
2025-08-13 17:42:23.746 | 2025-08-13T10:42:23.746Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/opensearch --
2025-08-13 17:42:23.757 | 2025-08-13T10:42:23.757Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.opensearch.OpenSearchPlugin
2025-08-13 17:42:23.761 | 2025-08-13T10:42:23.760Z	INFO	main	io.trino.server.PluginManager	Registering connector opensearch
2025-08-13 17:42:23.761 | 2025-08-13T10:42:23.761Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/opensearch --
2025-08-13 17:42:23.761 | 2025-08-13T10:42:23.761Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/oracle --
2025-08-13 17:42:23.773 | 2025-08-13T10:42:23.773Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.oracle.OraclePlugin
2025-08-13 17:42:23.776 | 2025-08-13T10:42:23.776Z	INFO	main	io.trino.server.PluginManager	Registering connector oracle
2025-08-13 17:42:23.777 | 2025-08-13T10:42:23.776Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/oracle --
2025-08-13 17:42:23.777 | 2025-08-13T10:42:23.777Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/password-authenticators --
2025-08-13 17:42:23.781 | 2025-08-13T10:42:23.781Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.password.PasswordAuthenticatorPlugin
2025-08-13 17:42:23.785 | 2025-08-13T10:42:23.784Z	INFO	main	io.trino.server.PluginManager	Registering group provider file
2025-08-13 17:42:23.785 | 2025-08-13T10:42:23.785Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/password-authenticators --
2025-08-13 17:42:23.785 | 2025-08-13T10:42:23.785Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/pinot --
2025-08-13 17:42:23.813 | 2025-08-13T10:42:23.813Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.pinot.PinotPlugin
2025-08-13 17:42:23.817 | 2025-08-13T10:42:23.817Z	INFO	main	io.trino.server.PluginManager	Registering connector pinot
2025-08-13 17:42:23.818 | 2025-08-13T10:42:23.818Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/pinot --
2025-08-13 17:42:23.818 | 2025-08-13T10:42:23.818Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/postgresql --
2025-08-13 17:42:23.824 | 2025-08-13T10:42:23.823Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.postgresql.PostgreSqlPlugin
2025-08-13 17:42:23.826 | 2025-08-13T10:42:23.826Z	INFO	main	io.trino.server.PluginManager	Registering connector postgresql
2025-08-13 17:42:23.827 | 2025-08-13T10:42:23.827Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/postgresql --
2025-08-13 17:42:23.827 | 2025-08-13T10:42:23.827Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/prometheus --
2025-08-13 17:42:23.830 | 2025-08-13T10:42:23.830Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.prometheus.PrometheusPlugin
2025-08-13 17:42:23.833 | 2025-08-13T10:42:23.833Z	INFO	main	io.trino.server.PluginManager	Registering connector prometheus
2025-08-13 17:42:23.834 | 2025-08-13T10:42:23.833Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/prometheus --
2025-08-13 17:42:23.834 | 2025-08-13T10:42:23.833Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/ranger --
2025-08-13 17:42:23.849 | 2025-08-13T10:42:23.848Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.ranger.ApacheRangerPlugin
2025-08-13 17:42:23.849 | 2025-08-13T10:42:23.849Z	INFO	main	io.trino.server.PluginManager	Registering system access control ranger
2025-08-13 17:42:23.849 | 2025-08-13T10:42:23.849Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/ranger --
2025-08-13 17:42:23.849 | 2025-08-13T10:42:23.849Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/redis --
2025-08-13 17:42:23.854 | 2025-08-13T10:42:23.854Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.redis.RedisPlugin
2025-08-13 17:42:23.858 | 2025-08-13T10:42:23.857Z	INFO	main	io.trino.server.PluginManager	Registering connector redis
2025-08-13 17:42:23.858 | 2025-08-13T10:42:23.858Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/redis --
2025-08-13 17:42:23.858 | 2025-08-13T10:42:23.858Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/redshift --
2025-08-13 17:42:23.866 | 2025-08-13T10:42:23.865Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.redshift.RedshiftPlugin
2025-08-13 17:42:23.875 | 2025-08-13T10:42:23.874Z	INFO	main	io.trino.server.PluginManager	Registering connector redshift
2025-08-13 17:42:23.875 | 2025-08-13T10:42:23.875Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/redshift --
2025-08-13 17:42:23.875 | 2025-08-13T10:42:23.875Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/resource-group-managers --
2025-08-13 17:42:23.879 | 2025-08-13T10:42:23.879Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.resourcegroups.ResourceGroupManagerPlugin
2025-08-13 17:42:23.883 | 2025-08-13T10:42:23.883Z	INFO	main	io.trino.server.PluginManager	Registering resource group configuration manager file
2025-08-13 17:42:23.883 | 2025-08-13T10:42:23.883Z	INFO	main	io.trino.server.PluginManager	Registering resource group configuration manager db
2025-08-13 17:42:23.884 | 2025-08-13T10:42:23.883Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/resource-group-managers --
2025-08-13 17:42:23.884 | 2025-08-13T10:42:23.884Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/session-property-managers --
2025-08-13 17:42:23.888 | 2025-08-13T10:42:23.888Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.session.SessionPropertyConfigurationManagerPlugin
2025-08-13 17:42:23.891 | 2025-08-13T10:42:23.891Z	INFO	main	io.trino.server.PluginManager	Registering session property configuration manager file
2025-08-13 17:42:23.891 | 2025-08-13T10:42:23.891Z	INFO	main	io.trino.server.PluginManager	Registering session property configuration manager db
2025-08-13 17:42:23.891 | 2025-08-13T10:42:23.891Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/session-property-managers --
2025-08-13 17:42:23.891 | 2025-08-13T10:42:23.891Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/singlestore --
2025-08-13 17:42:23.897 | 2025-08-13T10:42:23.897Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.singlestore.SingleStorePlugin
2025-08-13 17:42:23.900 | 2025-08-13T10:42:23.900Z	INFO	main	io.trino.server.PluginManager	Registering connector singlestore
2025-08-13 17:42:23.900 | 2025-08-13T10:42:23.900Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/singlestore --
2025-08-13 17:42:23.900 | 2025-08-13T10:42:23.900Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/snowflake --
2025-08-13 17:42:23.905 | 2025-08-13T10:42:23.905Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.snowflake.SnowflakePlugin
2025-08-13 17:42:23.910 | 2025-08-13T10:42:23.909Z	INFO	main	io.trino.server.PluginManager	Registering connector snowflake
2025-08-13 17:42:23.910 | 2025-08-13T10:42:23.910Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/snowflake --
2025-08-13 17:42:23.910 | 2025-08-13T10:42:23.910Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/spooling-filesystem --
2025-08-13 17:42:23.920 | 2025-08-13T10:42:23.920Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.spooling.filesystem.FileSystemSpoolingPlugin
2025-08-13 17:42:23.920 | 2025-08-13T10:42:23.920Z	INFO	main	io.trino.server.PluginManager	Registering spooling manager filesystem
2025-08-13 17:42:23.920 | 2025-08-13T10:42:23.920Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/spooling-filesystem --
2025-08-13 17:42:23.920 | 2025-08-13T10:42:23.920Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/sqlserver --
2025-08-13 17:42:23.925 | 2025-08-13T10:42:23.925Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.sqlserver.SqlServerPlugin
2025-08-13 17:42:23.929 | 2025-08-13T10:42:23.928Z	INFO	main	io.trino.server.PluginManager	Registering connector sqlserver
2025-08-13 17:42:23.929 | 2025-08-13T10:42:23.929Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/sqlserver --
2025-08-13 17:42:23.929 | 2025-08-13T10:42:23.929Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/teradata-functions --
2025-08-13 17:42:23.930 | 2025-08-13T10:42:23.930Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.teradata.functions.TeradataFunctionsPlugin
2025-08-13 17:42:23.933 | 2025-08-13T10:42:23.933Z	INFO	main	io.trino.server.PluginManager	Registering functions from TeradataFunctionsPlugin
2025-08-13 17:42:23.938 | 2025-08-13T10:42:23.938Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/teradata-functions --
2025-08-13 17:42:23.938 | 2025-08-13T10:42:23.938Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/thrift --
2025-08-13 17:42:23.946 | 2025-08-13T10:42:23.945Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.thrift.ThriftPlugin
2025-08-13 17:42:23.948 | 2025-08-13T10:42:23.948Z	INFO	main	io.trino.server.PluginManager	Registering connector trino_thrift
2025-08-13 17:42:23.948 | 2025-08-13T10:42:23.948Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/thrift --
2025-08-13 17:42:23.948 | 2025-08-13T10:42:23.948Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/tpcds --
2025-08-13 17:42:23.952 | 2025-08-13T10:42:23.952Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.tpcds.TpcdsPlugin
2025-08-13 17:42:23.955 | 2025-08-13T10:42:23.955Z	INFO	main	io.trino.server.PluginManager	Registering connector tpcds
2025-08-13 17:42:23.955 | 2025-08-13T10:42:23.955Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/tpcds --
2025-08-13 17:42:23.955 | 2025-08-13T10:42:23.955Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/tpch --
2025-08-13 17:42:23.959 | 2025-08-13T10:42:23.958Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.tpch.TpchPlugin
2025-08-13 17:42:23.963 | 2025-08-13T10:42:23.962Z	INFO	main	io.trino.server.PluginManager	Registering connector tpch
2025-08-13 17:42:23.963 | 2025-08-13T10:42:23.963Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/tpch --
2025-08-13 17:42:23.963 | 2025-08-13T10:42:23.963Z	INFO	main	io.trino.server.PluginManager	-- Loading plugin /data/trino/plugin/vertica --
2025-08-13 17:42:23.969 | 2025-08-13T10:42:23.968Z	INFO	main	io.trino.server.PluginManager	Installing io.trino.plugin.vertica.VerticaPlugin
2025-08-13 17:42:23.971 | 2025-08-13T10:42:23.971Z	INFO	main	io.trino.server.PluginManager	Registering connector vertica
2025-08-13 17:42:23.974 | 2025-08-13T10:42:23.971Z	INFO	main	io.trino.server.PluginManager	-- Finished loading plugin /data/trino/plugin/vertica --
2025-08-13 17:42:23.974 | 2025-08-13T10:42:23.973Z	INFO	main	io.trino.connector.StaticCatalogManager	-- Loading catalog jmx --
2025-08-13 17:42:24.025 | 2025-08-13T10:42:24.025Z	INFO	main	org.hibernate.validator.internal.util.Version	HV000001: Hibernate Validator 8.0.2.Final
2025-08-13 17:42:24.127 | 2025-08-13T10:42:24.127Z	INFO	main	Bootstrap	PROPERTY         DEFAULT  RUNTIME  DESCRIPTION
2025-08-13 17:42:24.127 | 2025-08-13T10:42:24.127Z	INFO	main	Bootstrap	jmx.dump-period  10.00s   10.00s
2025-08-13 17:42:24.128 | 2025-08-13T10:42:24.127Z	INFO	main	Bootstrap	jmx.dump-tables  []       []
2025-08-13 17:42:24.128 | 2025-08-13T10:42:24.127Z	INFO	main	Bootstrap	jmx.max-entries  86400    86400
2025-08-13 17:42:24.165 | 2025-08-13T10:42:24.165Z	INFO	main	io.trino.connector.StaticCatalogManager	-- Added catalog jmx using connector jmx --
2025-08-13 17:42:24.165 | 2025-08-13T10:42:24.165Z	INFO	main	io.trino.connector.StaticCatalogManager	-- Loading catalog tpcds --
2025-08-13 17:42:24.211 | 2025-08-13T10:42:24.210Z	INFO	main	org.hibernate.validator.internal.util.Version	HV000001: Hibernate Validator 8.0.2.Final
2025-08-13 17:42:24.310 | 2025-08-13T10:42:24.310Z	INFO	main	Bootstrap	PROPERTY               DEFAULT  RUNTIME  DESCRIPTION
2025-08-13 17:42:24.310 | 2025-08-13T10:42:24.310Z	INFO	main	Bootstrap	tpcds.split-count      ----     ----     Number of split to be created. If not specified the number of splits is computed as 'tpcds.splits-per-node * <number of active nodes>'
2025-08-13 17:42:24.310 | 2025-08-13T10:42:24.310Z	INFO	main	Bootstrap	tpcds.splits-per-node  11       4
2025-08-13 17:42:24.310 | 2025-08-13T10:42:24.310Z	INFO	main	Bootstrap	tpcds.with-no-sexism   false    false
2025-08-13 17:42:24.426 | 2025-08-13T10:42:24.426Z	INFO	main	io.trino.connector.StaticCatalogManager	-- Added catalog tpcds using connector tpcds --
2025-08-13 17:42:24.426 | 2025-08-13T10:42:24.426Z	INFO	main	io.trino.connector.StaticCatalogManager	-- Loading catalog tpch --
2025-08-13 17:42:24.470 | 2025-08-13T10:42:24.470Z	INFO	main	org.hibernate.validator.internal.util.Version	HV000001: Hibernate Validator 8.0.2.Final
2025-08-13 17:42:24.557 | 2025-08-13T10:42:24.557Z	INFO	main	Bootstrap	PROPERTY                             DEFAULT     RUNTIME     DESCRIPTION
2025-08-13 17:42:24.557 | 2025-08-13T10:42:24.557Z	INFO	main	Bootstrap	tpch.column-naming                   SIMPLIFIED  SIMPLIFIED
2025-08-13 17:42:24.557 | 2025-08-13T10:42:24.557Z	INFO	main	Bootstrap	tpch.double-type-mapping             DOUBLE      DOUBLE
2025-08-13 17:42:24.557 | 2025-08-13T10:42:24.557Z	INFO	main	Bootstrap	tpch.max-rows-per-page               1000000     1000000
2025-08-13 17:42:24.557 | 2025-08-13T10:42:24.557Z	INFO	main	Bootstrap	tpch.partitioning-enabled            true        true
2025-08-13 17:42:24.557 | 2025-08-13T10:42:24.557Z	INFO	main	Bootstrap	tpch.predicate-pushdown-enabled      true        true
2025-08-13 17:42:24.557 | 2025-08-13T10:42:24.557Z	INFO	main	Bootstrap	tpch.splits-per-node                 11          4
2025-08-13 17:42:24.557 | 2025-08-13T10:42:24.557Z	INFO	main	Bootstrap	tpch.table-scan-redirection-catalog  ----        ----
2025-08-13 17:42:24.557 | 2025-08-13T10:42:24.557Z	INFO	main	Bootstrap	tpch.table-scan-redirection-schema   ----        ----
2025-08-13 17:42:24.702 | 2025-08-13T10:42:24.702Z	INFO	main	io.trino.connector.StaticCatalogManager	-- Added catalog tpch using connector tpch --
2025-08-13 17:42:24.702 | 2025-08-13T10:42:24.702Z	INFO	main	io.trino.connector.StaticCatalogManager	-- Loading catalog memory --
2025-08-13 17:42:24.742 | 2025-08-13T10:42:24.742Z	INFO	main	org.hibernate.validator.internal.util.Version	HV000001: Hibernate Validator 8.0.2.Final
2025-08-13 17:42:24.821 | 2025-08-13T10:42:24.821Z	INFO	main	Bootstrap	PROPERTY                              DEFAULT  RUNTIME  DESCRIPTION
2025-08-13 17:42:24.821 | 2025-08-13T10:42:24.821Z	INFO	main	Bootstrap	memory.enable-lazy-dynamic-filtering  true     true
2025-08-13 17:42:24.821 | 2025-08-13T10:42:24.821Z	INFO	main	Bootstrap	memory.max-data-per-node              128MB    128MB
2025-08-13 17:42:24.821 | 2025-08-13T10:42:24.821Z	INFO	main	Bootstrap	memory.splits-per-node                11       11
2025-08-13 17:42:24.856 | 2025-08-13T10:42:24.856Z	INFO	main	io.trino.connector.StaticCatalogManager	-- Added catalog memory using connector memory --
2025-08-13 17:42:24.856 | 2025-08-13T10:42:24.856Z	INFO	main	io.trino.connector.StaticCatalogManager	-- Loading catalog polaris --
2025-08-13 17:42:24.901 | 2025-08-13T10:42:24.900Z	INFO	main	org.hibernate.validator.internal.util.Version	HV000001: Hibernate Validator 8.0.2.Final
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.066Z	INFO	main	Bootstrap	PROPERTY                                                       DEFAULT         RUNTIME                             DESCRIPTION
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.application-id                                             Trino           Trino                               Suffix that will be added to HTTP User-Agent header to identify the application
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.client.backoff-scale-factor                                3.0             3.0                                 Scale factor for RPC retry delay
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.batch-size                                                 100             100                                 Number of blobs to delete per batch. Recommended batch size is 100: https://cloud.google.com/storage/docs/batch
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.endpoint                                                   ----            ----                                Endpoint to use for GCS requests
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.json-key                                                   [REDACTED]      [REDACTED]
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.json-key-file-path                                         ----            /gcs-creds.json                     JSON key file used to access Google Cloud Storage
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.client.max-backoff-delay                                   2000.00ms       2000.00ms                           Maximum delay between RPC retries.
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.client.max-retries                                         20              20                                  Maximum number of RPC attempts
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.client.max-retry-time                                      25.00s          25.00s                              Total time limit for an RPC to be retried
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.client.min-backoff-delay                                   10.00ms         10.00ms                             Minimum delay between RPC retries
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.page-size                                                  100             100                                 The maximum number of blobs to return per page.
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.project-id                                                 ----            test-project
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.read-block-size                                            2MB             2MB                                 Minimum size that will be read in one RPC. The default size is 2MiB, see com.google.cloud.BaseStorageReadChannel.
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.use-access-token                                           false           false
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	gcs.write-block-size                                           16MB            16MB                                Minimum size that will be written in one RPC. The default size is 16MiB, see com.google.cloud.BaseStorageWriteChannel.
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.alluxio.enabled                                             false           false
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.cache.enabled                                               false           false
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.hadoop.enabled                                              false           false
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.native-azure.enabled                                        false           false
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.native-gcs.enabled                                          false           true
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.native-local.enabled                                        false           false
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.native-s3.enabled                                           false           false
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.memory-cache.ttl                                            1.00h           1.00h                               Duration to keep files in the cache prior to eviction
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.memory-cache.max-content-length                             8MB             8MB                                 Maximum size of file that can be cached
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	fs.memory-cache.max-size                                       200MB           200MB                               Maximum total size of the cache
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	jmx.base-name                                                  ----            ----
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.max-open-sort-files                                    50              50                                  Maximum number of writer temporary files to read in one pass
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.writer-sort-buffer-size                                64MB            64MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.bloom-filters.enabled                                 false           false
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.lazy-read-small-ranges                                true            true                                ORC read small disk ranges lazily
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.max-read-block-size                                   16MB            16MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.max-buffer-size                                       8MB             8MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.max-merge-distance                                    1MB             1MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.nested-lazy                                           true            true                                ORC lazily read nested data
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.read-legacy-short-zone-id                             false           false                               Allow reads on ORC files with short zone ID in the stripe footer
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.stream-buffer-size                                    8MB             8MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.tiny-stripe-threshold                                 8MB             8MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.use-column-names                                      false           false                               Access ORC columns using names from the file
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.default-bloom-filter-fpp                              0.05            0.05                                ORC Bloom filter false positive probability
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.dictionary-max-memory                          16MB            16MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.max-compression-buffer-size                    256kB           256kB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.row-group-max-rows                             10000           10000
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.string-statistics-limit                        64B             64B
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.stripe-max-rows                                10000000        10000000
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.stripe-max-size                                64MB            64MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.stripe-min-size                                32MB            32MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.validation-mode                                BOTH            BOTH                                Level of detail in ORC validation. Lower levels require more memory.
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.validation-percentage                          0.0             0.0                                 Percentage of ORC files to validate after write by re-reading the whole file
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	hive.orc.writer.writer-identification                          TRINO           TRINO
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.ignore-statistics                                      false           false                               Ignore statistics from Parquet to allow querying files with corrupted or incorrect statistics
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.max-buffer-size                                        8MB             8MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.max-merge-distance                                     1MB             1MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.max-read-block-row-count                               8192            8192                                Maximum number of rows read in a batch
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.max-read-block-size                                    16MB            16MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.small-file-threshold                                   3MB             3MB                                 Size below which a parquet file will be read entirely
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.use-bloom-filter                                       true            true                                Use Parquet Bloom filters
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.use-column-index                                       true            true                                Enable using Parquet column indexes
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.experimental.vectorized-decoding.enabled               true            true                                Enable using Java Vector API for faster decoding of parquet files
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.writer.batch-size                                      10000           10000                               Maximum number of rows passed to the writer in each batch
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.writer.block-size                                      128MB           128MB
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.writer.page-size                                       1048576B        1048576B
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.writer.page-value-count                                60000           60000
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	parquet.writer.validation-percentage                           5.0             5.0                                 Percentage of parquet files to validate after write by re-reading the whole file
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.add-files-procedure.enabled                            false           false                               Allow users to call the add_files procedure
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.allowed-extra-properties                               []              []                                  List of extra properties that are allowed to be set on Iceberg tables
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.bucket-execution                                       true            true                                Enable bucket-aware execution: use physical bucketing information to optimize queries
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.catalog.type                                           HIVE_METASTORE  REST
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.extended-statistics.collect-on-write                   true            true                                Collect extended statistics during writes
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.compression-codec                                      ZSTD            ZSTD
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.delete-schema-locations-fallback                       false           false                               Whether schema locations should be deleted when Trino can't determine whether they contain external files.
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.dynamic-filtering.wait-timeout                         1.00s           1.00s                               Duration to wait for completion of dynamic filters during split generation
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.expire-snapshots.min-retention                         7.00d           7.00d                               Minimal retention period for expire_snapshot procedure
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.extended-statistics.enabled                            true            true                                Enable collection (ANALYZE) and use of extended statistics.
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.file-based-conflict-detection                          true            true                                Enable file-based conflict detection: take partition information from the actual written files as a source for the conflict detection system
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.file-format                                            PARQUET         PARQUET
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.format-version                                         2               2                                   Default Iceberg table format version
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.materialized-views.hide-storage-table                  true            true                                Hide materialized view storage tables in metastore
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.hive-catalog-name                                      ----            ----                                Catalog to redirect to when a Hive table is referenced
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.idle-writer-min-file-size                              16MB            16MB                                Minimum data written by a single partition writer before it can be consider as 'idle' and could be closed by the engine
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.incremental-refresh-enabled                            true            true                                Enable Incremental refresh for MVs backed by Iceberg tables, when possible
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.materialized-views.storage-schema                      ----            ----                                Schema for creating materialized views storage tables
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.max-commit-retry                                       4               4                                   Number of times to retry a commit before failing
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.max-partitions-per-writer                              100             100                                 Maximum number of partitions per writer
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.metadata-cache.enabled                                 true            true                                Enables in-memory caching of metadata files on coordinator if fs.cache.enabled is not set to true
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.metadata.parallelism                                   8               8                                   Limits metadata enumeration calls parallelism
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.minimum-assigned-split-weight                          0.05            0.05                                Minimum weight that a split can be assigned
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.object-store-layout.enabled                            false           false                               Enable the Iceberg object store file layout
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.projection-pushdown-enabled                            true            true                                Read only required fields from a row type
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.query-partition-filter-required                        false           false                               Require a filter on at least one partition column
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.query-partition-filter-required-schemas                []              []                                  List of schemas for which filter on partition column is enforced
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.register-table-procedure.enabled                       false           false                               Allow users to call the register_table procedure
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.remove-orphan-files.min-retention                      7.00d           7.00d                               Minimal retention period for remove_orphan_files procedure
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.sorted-writing-enabled                                 true            true                                Enable sorted writing to tables with a specified sort order
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.split-manager-threads                                  22              22                                  Number of threads to use for generating splits
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.table-statistics-enabled                               true            true                                Enable use of table statistics
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.target-max-file-size                                   1GB             1GB                                 Target maximum size of written files; the actual size may be larger
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.unique-table-location                                  true            true                                Use randomized, unique table locations
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.use-file-size-from-metadata                            true            true
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.security                                               ALLOW_ALL       ALLOW_ALL
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.uri                                       ----            http://polaris:8181/api/catalog/v1  The URI to the REST server
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.case-insensitive-name-matching            false           false                               Match object names case-insensitively
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.case-insensitive-name-matching.cache-ttl  1.00m           1.00m                               Duration to keep case insensitive object mapping prior to eviction
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.nested-namespace-enabled                  false           false                               Support querying objects under nested namespace
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.prefix                                    ----            ----                                The prefix for the resource path to use with the REST catalog server
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.security                                  NONE            NONE                                Authorization protocol to use when communicating with the REST catalog server
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.session-timeout                           3600000.00ms    3600000.00ms                        Duration to keep authentication session in cache
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.session                                   NONE            NONE                                Type of REST catalog sessionType to use when communicating with REST catalog Server
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.sigv4-enabled                             false           false                               Enable AWS Signature version 4 (SigV4)
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.vended-credentials-enabled                false           false                               Use credentials provided by the REST backend for file system access
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.view-endpoints-enabled                    true            true                                Enable view endpoints
2025-08-13 17:42:25.067 | 2025-08-13T10:42:25.067Z	INFO	main	Bootstrap	iceberg.rest-catalog.warehouse                                 ----            ----                                The warehouse location/identifier to use with the REST catalog server
2025-08-13 17:42:25.308 | 2025-08-13T10:42:25.308Z	WARN	main	com.google.inject.internal.util.LineNumbers	Failed loading line numbers. ASM is probably out of date. Further failures won't be logged.
2025-08-13 17:42:25.308 | java.lang.IllegalArgumentException: Unsupported class file major version 67
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.asm.$ClassReader.<init>(ClassReader.java:199)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.asm.$ClassReader.<init>(ClassReader.java:180)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.asm.$ClassReader.<init>(ClassReader.java:166)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.asm.$ClassReader.<init>(ClassReader.java:287)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.util.LineNumbers.<init>(LineNumbers.java:74)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.util.StackTraceElements$1.load(StackTraceElements.java:48)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.util.StackTraceElements$1.load(StackTraceElements.java:44)
2025-08-13 17:42:25.308 | 	at com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3551)
2025-08-13 17:42:25.308 | 	at com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2302)
2025-08-13 17:42:25.308 | 	at com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2177)
2025-08-13 17:42:25.308 | 	at com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2068)
2025-08-13 17:42:25.308 | 	at com.google.common.cache.LocalCache.get(LocalCache.java:3986)
2025-08-13 17:42:25.308 | 	at com.google.common.cache.LocalCache.getOrLoad(LocalCache.java:4007)
2025-08-13 17:42:25.308 | 	at com.google.common.cache.LocalCache$LocalLoadingCache.get(LocalCache.java:4946)
2025-08-13 17:42:25.308 | 	at com.google.common.cache.LocalCache$LocalLoadingCache.getUnchecked(LocalCache.java:4953)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.util.StackTraceElements.forMember(StackTraceElements.java:67)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.SourceFormatter.formatMember(SourceFormatter.java:91)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.SourceFormatter.formatInjectionPoint(SourceFormatter.java:97)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.SourceFormatter.format(SourceFormatter.java:49)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.GenericErrorDetail.formatDetail(GenericErrorDetail.java:26)
2025-08-13 17:42:25.308 | 	at com.google.inject.spi.ErrorDetail.format(ErrorDetail.java:64)
2025-08-13 17:42:25.308 | 	at com.google.inject.internal.Messages.formatMessages(Messages.java:90)
2025-08-13 17:42:25.308 | 	at com.google.inject.CreationException.getMessage(CreationException.java:50)
2025-08-13 17:42:25.308 | 	at java.base/java.lang.Throwable.getLocalizedMessage(Throwable.java:424)
2025-08-13 17:42:25.308 | 	at java.base/java.lang.Throwable.toString(Throwable.java:523)
2025-08-13 17:42:25.308 | 	at java.base/java.lang.Throwable.<init>(Throwable.java:337)
2025-08-13 17:42:25.308 | 	at java.base/java.lang.Exception.<init>(Exception.java:103)
2025-08-13 17:42:25.308 | 	at java.base/java.util.concurrent.ExecutionException.<init>(ExecutionException.java:90)
2025-08-13 17:42:25.308 | 	at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:124)
2025-08-13 17:42:25.308 | 	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:193)
2025-08-13 17:42:25.308 | 	at io.airlift.concurrent.MoreFutures.getFutureValue(MoreFutures.java:193)
2025-08-13 17:42:25.308 | 	at io.airlift.concurrent.MoreFutures.getFutureValue(MoreFutures.java:176)
2025-08-13 17:42:25.308 | 	at io.airlift.concurrent.MoreFutures.getDone(MoreFutures.java:280)
2025-08-13 17:42:25.308 | 	at io.trino.util.Executors.executeUntilFailure(Executors.java:50)
2025-08-13 17:42:25.308 | 	at io.trino.connector.StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.308 | 	at io.trino.server.Server.doStart(Server.java:152)
2025-08-13 17:42:25.308 | 	at io.trino.server.Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.308 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.308 | 	at io.trino.server.Server.start(Server.java:90)
2025-08-13 17:42:25.308 | 	at io.trino.server.TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.308 | 
2025-08-13 17:42:25.308 | 
2025-08-13 17:42:25.382 | 2025-08-13T10:42:25.367Z	ERROR	main	io.trino.server.Server	Unable to create injector, see the following errors:
2025-08-13 17:42:25.382 | 
2025-08-13 17:42:25.382 | 1) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.382 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.382 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.382 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.382 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.382 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.382 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.382 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.382 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.382 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.382 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.382 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.382 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.382 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.382 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.382 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.382 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.382 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.382 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.382 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.382 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.382 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.382 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.382 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.382 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.382 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.382 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.382 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.382 |   at IcebergTransactionManager.<init>(Unknown Source)
2025-08-13 17:42:25.382 |       \_ for 1st parameter metadataFactory
2025-08-13 17:42:25.382 |   at IcebergModule.configure(IcebergModule.java:75)
2025-08-13 17:42:25.382 |   at IcebergSplitManager.<init>(Unknown Source)
2025-08-13 17:42:25.382 |       \_ for 1st parameter transactionManager
2025-08-13 17:42:25.382 |   while locating IcebergSplitManager
2025-08-13 17:42:25.382 |   at IcebergModule.configure(IcebergModule.java:85)
2025-08-13 17:42:25.382 |   while locating ConnectorSplitManager annotated with interface ForClassLoaderSafe
2025-08-13 17:42:25.382 | 
2025-08-13 17:42:25.382 | Learn more:
2025-08-13 17:42:25.382 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.382 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.382 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.382 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.382 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.382 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.382 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.382 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.382 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.382 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.382 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.382 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.382 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.382 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.382 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.382 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.382 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.382 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.382 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.382 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.382 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.382 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.382 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.382 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.382 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.382 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.382 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.382 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.382 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.382 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.382 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.382 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.382 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.382 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.382 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.382 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.382 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.382 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.382 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.382 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.382 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.382 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.382 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.382 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.382 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.382 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.382 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.382 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.382 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.382 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.382 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.382 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.382 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.382 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.382 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.382 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.382 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.382 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.382 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.382 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.382 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.382 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.382 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.382 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.382 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.382 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.382 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.382 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.382 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.382 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.382 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.382 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.383 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.383 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.383 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.383 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.383 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.383 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.383 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.383 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.383 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.383 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.383 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.383 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.383 | 	... 161 more
2025-08-13 17:42:25.383 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.383 | 	... 163 more
2025-08-13 17:42:25.383 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.383 | 	... 167 more
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | 2) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.383 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.383 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.383 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.383 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.383 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.383 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.383 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.383 |   at IcebergTransactionManager.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter metadataFactory
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:75)
2025-08-13 17:42:25.383 |   at IcebergSplitManager.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter transactionManager
2025-08-13 17:42:25.383 |   while locating IcebergSplitManager
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:85)
2025-08-13 17:42:25.383 |   at ClassLoaderSafeConnectorSplitManager.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter delegate
2025-08-13 17:42:25.383 |   while locating ClassLoaderSafeConnectorSplitManager
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:86)
2025-08-13 17:42:25.383 |   while locating ConnectorSplitManager
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | Learn more:
2025-08-13 17:42:25.383 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.383 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.383 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.383 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.383 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.383 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.383 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.383 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.383 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.383 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.383 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.383 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.383 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.383 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.383 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.383 | 	... 176 more
2025-08-13 17:42:25.383 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.383 | 	... 178 more
2025-08-13 17:42:25.383 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.383 | 	... 182 more
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | 3) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.383 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.383 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.383 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.383 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.383 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.383 |   while locating IcebergPageSourceProviderFactory
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:87)
2025-08-13 17:42:25.383 |   while locating ConnectorPageSourceProviderFactory annotated with interface ForClassLoaderSafe
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | Learn more:
2025-08-13 17:42:25.383 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.383 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.383 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.383 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.383 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.383 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.383 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.383 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.383 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.383 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.383 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.383 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.383 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.383 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.383 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.383 | 	... 121 more
2025-08-13 17:42:25.383 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.383 | 	... 123 more
2025-08-13 17:42:25.383 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.383 | 	... 127 more
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | 4) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.383 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.383 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.383 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.383 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.383 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.383 |   while locating IcebergPageSourceProviderFactory
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:87)
2025-08-13 17:42:25.383 |   at ClassLoaderSafeConnectorPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter delegate
2025-08-13 17:42:25.383 |   while locating ClassLoaderSafeConnectorPageSourceProviderFactory
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:89)
2025-08-13 17:42:25.383 |   while locating ConnectorPageSourceProviderFactory
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | Learn more:
2025-08-13 17:42:25.383 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.383 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.383 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.383 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.383 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.383 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.383 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.383 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.383 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.383 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.383 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.383 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.383 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.383 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.383 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.383 | 	... 136 more
2025-08-13 17:42:25.383 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.383 | 	... 138 more
2025-08-13 17:42:25.383 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.383 | 	... 142 more
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | 5) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.383 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.383 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.383 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.383 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.383 |   at IcebergPageSinkProvider.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   while locating IcebergPageSinkProvider
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:90)
2025-08-13 17:42:25.383 |   while locating ConnectorPageSinkProvider annotated with interface ForClassLoaderSafe
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | Learn more:
2025-08-13 17:42:25.383 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.383 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.383 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.383 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.383 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.383 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.383 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.383 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.383 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.383 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.383 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.383 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.383 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.383 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.383 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.383 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.383 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.383 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.383 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.383 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.383 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.383 | 	... 118 more
2025-08-13 17:42:25.383 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.383 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.383 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.383 | 	... 120 more
2025-08-13 17:42:25.383 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.383 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.383 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.383 | 	... 124 more
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | 6) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.383 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.383 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.383 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.383 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.383 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.383 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.383 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.383 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.383 |   at IcebergPageSinkProvider.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.383 |   while locating IcebergPageSinkProvider
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:90)
2025-08-13 17:42:25.383 |   at ClassLoaderSafeConnectorPageSinkProvider.<init>(Unknown Source)
2025-08-13 17:42:25.383 |       \_ for 1st parameter delegate
2025-08-13 17:42:25.383 |   while locating ClassLoaderSafeConnectorPageSinkProvider
2025-08-13 17:42:25.383 |   at IcebergModule.configure(IcebergModule.java:91)
2025-08-13 17:42:25.383 |   while locating ConnectorPageSinkProvider
2025-08-13 17:42:25.383 | 
2025-08-13 17:42:25.383 | Learn more:
2025-08-13 17:42:25.383 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.383 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.383 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.383 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.383 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.383 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.383 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.383 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.383 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.383 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.383 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.383 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.383 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.383 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.383 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.383 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.383 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.383 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.384 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.384 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.384 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.384 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.384 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.384 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.384 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.384 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.384 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.384 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.384 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.384 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.384 | 	... 133 more
2025-08-13 17:42:25.384 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.384 | 	... 135 more
2025-08-13 17:42:25.384 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.384 | 	... 139 more
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | 7) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.384 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.384 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   at RollbackToSnapshotProcedure.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter catalogFactory
2025-08-13 17:42:25.384 |   while locating RollbackToSnapshotProcedure
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:116)
2025-08-13 17:42:25.384 |   while locating Procedure annotated with @Element(setName=,uniqueId=27, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.384 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at BoundProviderFactory.get(BoundProviderFactory.java:58)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.384 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.384 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.384 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.384 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.384 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.384 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.384 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.384 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.384 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.384 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.384 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.384 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.384 | 	... 133 more
2025-08-13 17:42:25.384 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.384 | 	... 135 more
2025-08-13 17:42:25.384 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.384 | 	... 139 more
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | 8) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.384 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.384 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   at RegisterTableProcedure.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter catalogFactory
2025-08-13 17:42:25.384 |   while locating RegisterTableProcedure
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:117)
2025-08-13 17:42:25.384 |   while locating Procedure annotated with @Element(setName=,uniqueId=28, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException (same stack trace as error #7)
2025-08-13 17:42:25.384 | 9) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.384 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.384 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   at UnregisterTableProcedure.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter catalogFactory
2025-08-13 17:42:25.384 |   while locating UnregisterTableProcedure
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:118)
2025-08-13 17:42:25.384 |   while locating Procedure annotated with @Element(setName=,uniqueId=29, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException (same stack trace as error #7)
2025-08-13 17:42:25.384 | 10) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.384 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.384 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   at TableChangesFunctionProvider.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter trinoCatalogFactory
2025-08-13 17:42:25.384 |   while locating TableChangesFunctionProvider
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:130)
2025-08-13 17:42:25.384 |   while locating ConnectorTableFunction annotated with @Element(setName=,uniqueId=38, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException (same stack trace as error #7)
2025-08-13 17:42:25.384 | 11) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.384 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.384 |   at TableChangesFunctionProcessorProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter icebergPageSourceProviderFactory
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:132)
2025-08-13 17:42:25.384 |   at IcebergFunctionProvider.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter tableChangesFunctionProcessorProviderFactory
2025-08-13 17:42:25.384 |   while locating IcebergFunctionProvider
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:131)
2025-08-13 17:42:25.384 |   while locating FunctionProvider
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.384 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.384 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.384 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.384 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.384 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.384 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.384 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.384 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.384 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.384 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.384 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.384 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.384 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.384 | 	... 146 more
2025-08-13 17:42:25.384 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.384 | 	... 148 more
2025-08-13 17:42:25.384 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.384 | 	... 152 more
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | 12) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.384 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.384 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   at IcebergTablesSystemTable.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter catalogFactory
2025-08-13 17:42:25.384 |   while locating IcebergTablesSystemTable
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:135)
2025-08-13 17:42:25.384 |   while locating SystemTable annotated with @Element(setName=,uniqueId=39, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException (same stack trace as error #6)
2025-08-13 17:42:25.384 | 13) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at DefaultIcebergFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating DefaultIcebergFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:139)
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Default
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.384 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.384 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.384 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.384 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.384 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.384 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.384 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.384 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.384 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.384 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.384 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.384 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.384 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.384 | 	... 96 more
2025-08-13 17:42:25.384 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.384 | 	... 98 more
2025-08-13 17:42:25.384 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.384 | 	... 102 more
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | 14) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.384 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.384 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating TrinoCatalogFactory
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException (same stack trace as error #5)
2025-08-13 17:42:25.384 | 15) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException (same stack trace as error #13)
2025-08-13 17:42:25.384 | 16) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.384 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.384 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.384 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.384 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.384 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.384 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.384 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.384 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.384 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.384 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.384 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.384 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.384 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.384 | 	... 58 more
2025-08-13 17:42:25.384 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.384 | 	... 60 more
2025-08-13 17:42:25.384 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.384 | 	... 64 more
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | 17) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.384 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.384 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.384 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.384 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.384 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.384 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.384 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.384 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.384 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.384 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.384 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.384 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.384 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.384 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.384 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.384 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.384 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.384 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.384 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.384 | 	... 81 more
2025-08-13 17:42:25.384 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.384 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.384 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.384 | 	... 83 more
2025-08-13 17:42:25.384 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.384 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.384 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.384 | 	... 87 more
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | 18) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.384 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.384 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.384 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.384 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.384 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.384 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.384 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.384 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.384 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.384 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.384 |   at IcebergTransactionManager.<init>(Unknown Source)
2025-08-13 17:42:25.384 |       \_ for 1st parameter metadataFactory
2025-08-13 17:42:25.384 |   at IcebergModule.configure(IcebergModule.java:75)
2025-08-13 17:42:25.384 |   while locating IcebergTransactionManager
2025-08-13 17:42:25.384 | 
2025-08-13 17:42:25.384 | Learn more:
2025-08-13 17:42:25.384 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.384 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.384 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.384 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.384 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.384 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.384 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.384 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.384 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.384 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.384 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.384 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.384 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.384 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.384 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.384 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.384 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.384 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.384 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.385 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.385 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.385 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.385 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.385 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.385 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.385 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.385 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.385 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.385 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.385 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.385 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.385 | 	... 146 more
2025-08-13 17:42:25.385 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.385 | 	... 148 more
2025-08-13 17:42:25.385 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.385 | 	... 152 more
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | 19) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.385 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.385 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.385 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.385 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.385 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.385 |   while locating IcebergPageSourceProviderFactory
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | Learn more:
2025-08-13 17:42:25.385 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.385 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.385 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.385 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.385 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.385 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.385 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.385 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.385 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.385 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.385 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.385 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.385 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.385 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.385 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.385 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.385 | 	... 117 more
2025-08-13 17:42:25.385 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.385 | 	... 119 more
2025-08-13 17:42:25.385 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.385 | 	... 123 more
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | 20) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.385 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.385 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.385 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.385 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.385 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.385 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.385 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.385 |   while locating IcebergMetadataFactory
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | Learn more:
2025-08-13 17:42:25.385 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.385 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.385 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.385 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.385 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.385 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.385 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.385 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.385 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.385 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.385 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.385 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.385 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.385 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.385 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.385 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.385 | 	... 132 more
2025-08-13 17:42:25.385 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.385 | 	... 134 more
2025-08-13 17:42:25.385 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.385 | 	... 138 more
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | 21) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.385 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.385 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.385 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.385 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.385 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.385 |   at TableChangesFunctionProcessorProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter icebergPageSourceProviderFactory
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:132)
2025-08-13 17:42:25.385 |   while locating TableChangesFunctionProcessorProviderFactory
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | Learn more:
2025-08-13 17:42:25.385 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.385 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.385 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.385 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.385 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.385 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.385 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.385 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.385 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.385 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.385 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.385 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.385 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.385 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.385 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.385 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.385 | 	... 131 more
2025-08-13 17:42:25.385 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.385 | 	... 133 more
2025-08-13 17:42:25.385 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.385 | 	... 137 more
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | 22) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.385 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.385 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.385 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.385 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.385 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.385 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.385 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.385 |   at IcebergTransactionManager.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter metadataFactory
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:75)
2025-08-13 17:42:25.385 |   at IcebergConnector.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 3rd parameter transactionManager
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:142)
2025-08-13 17:42:25.385 |   while locating IcebergConnector
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | Learn more:
2025-08-13 17:42:25.385 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.385 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.385 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.385 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.385 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.385 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.385 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.385 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.385 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.385 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.385 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.385 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.385 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.385 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.385 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.385 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.385 | 	... 160 more
2025-08-13 17:42:25.385 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.385 | 	... 162 more
2025-08-13 17:42:25.385 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.385 | 	... 166 more
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | 23) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   while locating GcsStorageFactory
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | Learn more:
2025-08-13 17:42:25.385 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.385 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.385 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.385 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.385 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.385 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.385 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.385 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.385 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.385 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.385 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.385 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.385 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.385 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.385 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.385 | 	... 43 more
2025-08-13 17:42:25.385 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.385 | 	... 45 more
2025-08-13 17:42:25.385 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.385 | 	... 49 more
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | 24) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | Learn more:
2025-08-13 17:42:25.385 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.385 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.385 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.385 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.385 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.385 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.385 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.385 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.385 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.385 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.385 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.385 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.385 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.385 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.385 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.385 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.385 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.385 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.385 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.385 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.385 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.385 | 	... 57 more
2025-08-13 17:42:25.385 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.385 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.385 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.385 | 	... 59 more
2025-08-13 17:42:25.385 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.385 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.385 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.385 | 	... 63 more
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | 24 errors
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | ======================
2025-08-13 17:42:25.385 | Full classname legend:
2025-08-13 17:42:25.385 | ======================
2025-08-13 17:42:25.385 | Bootstrap:                                           "io.airlift.bootstrap.Bootstrap"
2025-08-13 17:42:25.385 | BoundProviderFactory:                                "com.google.inject.internal.BoundProviderFactory"
2025-08-13 17:42:25.385 | ClassLoaderSafeConnectorPageSinkProvider:            "io.trino.plugin.base.classloader.ClassLoaderSafeConnectorPageSinkProvider"
2025-08-13 17:42:25.385 | ClassLoaderSafeConnectorPageSourceProviderFactory:   "io.trino.plugin.base.classloader.ClassLoaderSafeConnectorPageSourceProviderFactory"
2025-08-13 17:42:25.385 | ClassLoaderSafeConnectorSplitManager:                "io.trino.plugin.base.classloader.ClassLoaderSafeConnectorSplitManager"
2025-08-13 17:42:25.385 | ConditionalModule:                                   "io.airlift.configuration.ConditionalModule"
2025-08-13 17:42:25.385 | ConnectorPageSinkProvider:                           "io.trino.spi.connector.ConnectorPageSinkProvider"
2025-08-13 17:42:25.385 | ConnectorPageSourceProviderFactory:                  "io.trino.spi.connector.ConnectorPageSourceProviderFactory"
2025-08-13 17:42:25.385 | ConnectorSplitManager:                               "io.trino.spi.connector.ConnectorSplitManager"
2025-08-13 17:42:25.385 | ConnectorTableFunction:                              "io.trino.spi.function.table.ConnectorTableFunction"
2025-08-13 17:42:25.385 | ConstructorBindingImpl$Factory:                      "com.google.inject.internal.ConstructorBindingImpl$Factory"
2025-08-13 17:42:25.385 | ConstructorInjector:                                 "com.google.inject.internal.ConstructorInjector"
2025-08-13 17:42:25.385 | ConstructorInjector$1:                               "com.google.inject.internal.ConstructorInjector$1"
2025-08-13 17:42:25.385 | DefaultCatalogFactory:                               "io.trino.connector.DefaultCatalogFactory"
2025-08-13 17:42:25.385 | DefaultConstructionProxyFactory$FastClassProxy:      "com.google.inject.internal.DefaultConstructionProxyFactory$FastClassProxy"
2025-08-13 17:42:25.385 | DefaultIcebergFileSystemFactory:                     "io.trino.plugin.iceberg.catalog.rest.DefaultIcebergFileSystemFactory"
2025-08-13 17:42:25.385 | DerValue:                                            "sun.security.util.DerValue"
2025-08-13 17:42:25.385 | DirectExecutor:                                      "com.google.common.util.concurrent.DirectExecutor"
2025-08-13 17:42:25.385 | DirectMethodHandleAccessor:                          "jdk.internal.reflect.DirectMethodHandleAccessor"
2025-08-13 17:42:25.385 | Element:                                             "com.google.inject.internal.Element"
2025-08-13 17:42:25.385 | ExecutorCompletionService:                           "java.util.concurrent.ExecutorCompletionService"
2025-08-13 17:42:25.385 | Executors:                                           "io.trino.util.Executors"
2025-08-13 17:42:25.385 | Executors$RunnableAdapter:                           "java.util.concurrent.Executors$RunnableAdapter"
2025-08-13 17:42:25.385 | FactoryProxy:                                        "com.google.inject.internal.FactoryProxy"
2025-08-13 17:42:25.385 | FileSystemModule:                                    "io.trino.filesystem.manager.FileSystemModule"
2025-08-13 17:42:25.385 | ForClassLoaderSafe:                                  "io.trino.plugin.base.classloader.ForClassLoaderSafe"
2025-08-13 17:42:25.385 | FunctionProvider:                                    "io.trino.spi.function.FunctionProvider"
2025-08-13 17:42:25.385 | FutureTask:                                          "java.util.concurrent.FutureTask"
2025-08-13 17:42:25.385 | GcsFileSystemFactory:                                "io.trino.filesystem.gcs.GcsFileSystemFactory"
2025-08-13 17:42:25.385 | GcsFileSystemModule:                                 "io.trino.filesystem.gcs.GcsFileSystemModule"
2025-08-13 17:42:25.385 | GcsStorageFactory:                                   "io.trino.filesystem.gcs.GcsStorageFactory"
2025-08-13 17:42:25.385 | GcsStorageFactory$$FastClassByGuice$$1477d6e:        "io.trino.filesystem.gcs.GcsStorageFactory$$FastClassByGuice$$1477d6e"
2025-08-13 17:42:25.385 | GoogleCredentials:                                   "com.google.auth.oauth2.GoogleCredentials"
2025-08-13 17:42:25.385 | Guice:                                               "com.google.inject.Guice"
2025-08-13 17:42:25.385 | IOException:                                         "java.io.IOException"
2025-08-13 17:42:25.385 | IcebergCatalogModule:                                "io.trino.plugin.iceberg.catalog.IcebergCatalogModule"
2025-08-13 17:42:25.385 | IcebergConnector:                                    "io.trino.plugin.iceberg.IcebergConnector"
2025-08-13 17:42:25.385 | IcebergConnectorFactory:                             "io.trino.plugin.iceberg.IcebergConnectorFactory"
2025-08-13 17:42:25.385 | IcebergConnectorFactory$IcebergFileSystemModule:     "io.trino.plugin.iceberg.IcebergConnectorFactory$IcebergFileSystemModule"
2025-08-13 17:42:25.385 | IcebergFileSystemFactory:                            "io.trino.plugin.iceberg.IcebergFileSystemFactory"
2025-08-13 17:42:25.385 | IcebergFunctionProvider:                             "io.trino.plugin.iceberg.functions.IcebergFunctionProvider"
2025-08-13 17:42:25.385 | IcebergMetadataFactory:                              "io.trino.plugin.iceberg.IcebergMetadataFactory"
2025-08-13 17:42:25.385 | IcebergModule:                                       "io.trino.plugin.iceberg.IcebergModule"
2025-08-13 17:42:25.385 | IcebergPageSinkProvider:                             "io.trino.plugin.iceberg.IcebergPageSinkProvider"
2025-08-13 17:42:25.385 | IcebergPageSourceProviderFactory:                    "io.trino.plugin.iceberg.IcebergPageSourceProviderFactory"
2025-08-13 17:42:25.385 | IcebergRestCatalogFileSystemFactory:                 "io.trino.plugin.iceberg.catalog.rest.IcebergRestCatalogFileSystemFactory"
2025-08-13 17:42:25.385 | IcebergRestCatalogModule:                            "io.trino.plugin.iceberg.catalog.rest.IcebergRestCatalogModule"
2025-08-13 17:42:25.385 | IcebergSplitManager:                                 "io.trino.plugin.iceberg.IcebergSplitManager"
2025-08-13 17:42:25.385 | IcebergTablesSystemTable:                            "io.trino.plugin.iceberg.system.IcebergTablesSystemTable"
2025-08-13 17:42:25.385 | IcebergTransactionManager:                           "io.trino.plugin.iceberg.IcebergTransactionManager"
2025-08-13 17:42:25.385 | InternalFactoryToProviderAdapter:                    "com.google.inject.internal.InternalFactoryToProviderAdapter"
2025-08-13 17:42:25.385 | InternalInjectorCreator:                             "com.google.inject.internal.InternalInjectorCreator"
2025-08-13 17:42:25.385 | InternalProviderInstanceBindingImpl$CyclicFactory:   "com.google.inject.internal.InternalProviderInstanceBindingImpl$CyclicFactory"
2025-08-13 17:42:25.385 | InternalProviderInstanceBindingImpl$CyclicFactory$1: "com.google.inject.internal.InternalProviderInstanceBindingImpl$CyclicFactory$1"
2025-08-13 17:42:25.385 | InternalProviderInstanceBindingImpl$Factory:         "com.google.inject.internal.InternalProviderInstanceBindingImpl$Factory"
2025-08-13 17:42:25.385 | InternalProviderInstanceBindingImpl$Factory$1:       "com.google.inject.internal.InternalProviderInstanceBindingImpl$Factory$1"
2025-08-13 17:42:25.385 | InvalidKeyException:                                 "java.security.InvalidKeyException"
2025-08-13 17:42:25.385 | InvalidKeySpecException:                             "java.security.spec.InvalidKeySpecException"
2025-08-13 17:42:25.385 | KeyFactory:                                          "java.security.KeyFactory"
2025-08-13 17:42:25.385 | LazyCatalogFactory:                                  "io.trino.connector.LazyCatalogFactory"
2025-08-13 17:42:25.385 | LifeCycleModule:                                     "io.airlift.bootstrap.LifeCycleModule"
2025-08-13 17:42:25.385 | OAuth2Utils:                                         "com.google.auth.oauth2.OAuth2Utils"
2025-08-13 17:42:25.385 | PKCS8Key:                                            "sun.security.pkcs.PKCS8Key"
2025-08-13 17:42:25.385 | Procedure:                                           "io.trino.spi.procedure.Procedure"
2025-08-13 17:42:25.385 | ProviderMethod:                                      "com.google.inject.internal.ProviderMethod"
2025-08-13 17:42:25.385 | ProviderToInternalFactoryAdapter:                    "com.google.inject.internal.ProviderToInternalFactoryAdapter"
2025-08-13 17:42:25.385 | ProvisionListenerStackCallback:                      "com.google.inject.internal.ProvisionListenerStackCallback"
2025-08-13 17:42:25.385 | ProvisionListenerStackCallback$Provision:            "com.google.inject.internal.ProvisionListenerStackCallback$Provision"
2025-08-13 17:42:25.385 | RSAKeyFactory:                                       "sun.security.rsa.RSAKeyFactory"
2025-08-13 17:42:25.385 | RSAPrivateCrtKeyImpl:                                "sun.security.rsa.RSAPrivateCrtKeyImpl"
2025-08-13 17:42:25.385 | RealMapBinder$ExtensionRealMapProvider:              "com.google.inject.internal.RealMapBinder$ExtensionRealMapProvider"
2025-08-13 17:42:25.385 | RealOptionalBinder$Actual:                           "com.google.inject.internal.RealOptionalBinder$Actual"
2025-08-13 17:42:25.385 | RealOptionalBinder$Default:                          "com.google.inject.internal.RealOptionalBinder$Default"
2025-08-13 17:42:25.385 | RealOptionalBinder$RealDirectTypeProvider:           "com.google.inject.internal.RealOptionalBinder$RealDirectTypeProvider"
2025-08-13 17:42:25.385 | RegisterTableProcedure:                              "io.trino.plugin.iceberg.procedure.RegisterTableProcedure"
2025-08-13 17:42:25.385 | RollbackToSnapshotProcedure:                         "io.trino.plugin.iceberg.procedure.RollbackToSnapshotProcedure"
2025-08-13 17:42:25.385 | Server:                                              "io.trino.server.Server"
2025-08-13 17:42:25.385 | ServiceAccountCredentials:                           "com.google.auth.oauth2.ServiceAccountCredentials"
2025-08-13 17:42:25.385 | SingleParameterInjector:                             "com.google.inject.internal.SingleParameterInjector"
2025-08-13 17:42:25.385 | SingletonScope$1:                                    "com.google.inject.internal.SingletonScope$1"
2025-08-13 17:42:25.385 | StaticCatalogManager:                                "io.trino.connector.StaticCatalogManager"
2025-08-13 17:42:25.385 | SystemTable:                                         "io.trino.spi.connector.SystemTable"
2025-08-13 17:42:25.385 | TableChangesFunctionProcessorProviderFactory:        "io.trino.plugin.iceberg.functions.tablechanges.TableChangesFunctionProcessorProviderFactory"
2025-08-13 17:42:25.385 | TableChangesFunctionProvider:                        "io.trino.plugin.iceberg.functions.tablechanges.TableChangesFunctionProvider"
2025-08-13 17:42:25.385 | TrinoCatalogFactory:                                 "io.trino.plugin.iceberg.catalog.TrinoCatalogFactory"
2025-08-13 17:42:25.385 | TrinoFileSystemFactory:                              "io.trino.filesystem.TrinoFileSystemFactory"
2025-08-13 17:42:25.385 | TrinoIcebergRestCatalogFactory:                      "io.trino.plugin.iceberg.catalog.rest.TrinoIcebergRestCatalogFactory"
2025-08-13 17:42:25.385 | TrinoServer:                                         "io.trino.server.TrinoServer"
2025-08-13 17:42:25.385 | UnregisterTableProcedure:                            "io.trino.plugin.iceberg.procedure.UnregisterTableProcedure"
2025-08-13 17:42:25.385 | ========================
2025-08-13 17:42:25.385 | End of classname legend:
2025-08-13 17:42:25.385 | ========================
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | com.google.inject.CreationException: Unable to create injector, see the following errors:
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | 1) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.385 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.385 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.385 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.385 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.385 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.385 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.385 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.385 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.385 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.385 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.385 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.385 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.385 |   at IcebergTransactionManager.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter metadataFactory
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:75)
2025-08-13 17:42:25.385 |   at IcebergSplitManager.<init>(Unknown Source)
2025-08-13 17:42:25.385 |       \_ for 1st parameter transactionManager
2025-08-13 17:42:25.385 |   while locating IcebergSplitManager
2025-08-13 17:42:25.385 |   at IcebergModule.configure(IcebergModule.java:85)
2025-08-13 17:42:25.385 |   while locating ConnectorSplitManager annotated with interface ForClassLoaderSafe
2025-08-13 17:42:25.385 | 
2025-08-13 17:42:25.385 | Learn more:
2025-08-13 17:42:25.385 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.385 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.385 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.385 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.385 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.385 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.385 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.385 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.385 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.385 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.385 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.385 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.385 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.385 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.385 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.385 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.386 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.386 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.386 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.386 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.386 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.386 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.386 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.386 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.386 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.386 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.386 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.386 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.386 | 	... 161 more
2025-08-13 17:42:25.386 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.386 | 	... 163 more
2025-08-13 17:42:25.386 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.386 | 	... 167 more
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | 2) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.386 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.386 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.386 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.386 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.386 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.386 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.386 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.386 |   at IcebergTransactionManager.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter metadataFactory
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:75)
2025-08-13 17:42:25.386 |   at IcebergSplitManager.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter transactionManager
2025-08-13 17:42:25.386 |   while locating IcebergSplitManager
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:85)
2025-08-13 17:42:25.386 |   at ClassLoaderSafeConnectorSplitManager.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter delegate
2025-08-13 17:42:25.386 |   while locating ClassLoaderSafeConnectorSplitManager
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:86)
2025-08-13 17:42:25.386 |   while locating ConnectorSplitManager
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | Learn more:
2025-08-13 17:42:25.386 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.386 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.386 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.386 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.386 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.386 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.386 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.386 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.386 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.386 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.386 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.386 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.386 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.386 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.386 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.386 | 	... 176 more
2025-08-13 17:42:25.386 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.386 | 	... 178 more
2025-08-13 17:42:25.386 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.386 | 	... 182 more
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | 3) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.386 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.386 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.386 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.386 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.386 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.386 |   while locating IcebergPageSourceProviderFactory
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:87)
2025-08-13 17:42:25.386 |   while locating ConnectorPageSourceProviderFactory annotated with interface ForClassLoaderSafe
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | Learn more:
2025-08-13 17:42:25.386 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.386 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.386 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.386 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.386 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.386 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.386 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.386 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.386 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.386 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.386 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.386 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.386 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.386 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.386 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.386 | 	... 121 more
2025-08-13 17:42:25.386 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.386 | 	... 123 more
2025-08-13 17:42:25.386 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.386 | 	... 127 more
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | 4) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.386 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.386 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.386 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.386 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.386 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.386 |   while locating IcebergPageSourceProviderFactory
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:87)
2025-08-13 17:42:25.386 |   at ClassLoaderSafeConnectorPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter delegate
2025-08-13 17:42:25.386 |   while locating ClassLoaderSafeConnectorPageSourceProviderFactory
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:89)
2025-08-13 17:42:25.386 |   while locating ConnectorPageSourceProviderFactory
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | Learn more:
2025-08-13 17:42:25.386 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.386 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.386 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.386 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.386 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.386 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.386 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.386 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.386 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.386 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.386 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.386 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.386 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.386 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.386 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.386 | 	... 136 more
2025-08-13 17:42:25.386 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.386 | 	... 138 more
2025-08-13 17:42:25.386 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.386 | 	... 142 more
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | 5) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.386 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.386 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.386 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.386 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.386 |   at IcebergPageSinkProvider.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating IcebergPageSinkProvider
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:90)
2025-08-13 17:42:25.386 |   while locating ConnectorPageSinkProvider annotated with interface ForClassLoaderSafe
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | Learn more:
2025-08-13 17:42:25.386 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.386 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.386 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.386 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.386 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.386 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.386 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.386 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.386 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.386 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.386 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.386 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.386 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.386 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.386 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.386 | 	... 118 more
2025-08-13 17:42:25.386 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.386 | 	... 120 more
2025-08-13 17:42:25.386 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.386 | 	... 124 more
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | 6) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.386 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.386 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.386 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.386 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.386 |   at IcebergPageSinkProvider.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating IcebergPageSinkProvider
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:90)
2025-08-13 17:42:25.386 |   at ClassLoaderSafeConnectorPageSinkProvider.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter delegate
2025-08-13 17:42:25.386 |   while locating ClassLoaderSafeConnectorPageSinkProvider
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:91)
2025-08-13 17:42:25.386 |   while locating ConnectorPageSinkProvider
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | Learn more:
2025-08-13 17:42:25.386 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.386 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.386 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.386 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.386 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.386 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.386 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.386 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.386 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.386 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.386 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.386 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.386 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.386 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.386 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.386 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.386 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.386 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.386 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.386 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.386 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.386 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.386 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.386 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.386 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.386 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.386 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.386 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.386 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.386 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.386 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.386 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.386 | 	... 133 more
2025-08-13 17:42:25.386 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.386 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.386 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.386 | 	... 135 more
2025-08-13 17:42:25.386 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.386 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.386 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.386 | 	... 139 more
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | 7) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.386 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.386 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.386 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.386 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.386 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.386 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.386 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.386 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.386 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.386 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.386 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.386 |   at RollbackToSnapshotProcedure.<init>(Unknown Source)
2025-08-13 17:42:25.386 |       \_ for 1st parameter catalogFactory
2025-08-13 17:42:25.386 |   while locating RollbackToSnapshotProcedure
2025-08-13 17:42:25.386 |   at IcebergModule.configure(IcebergModule.java:116)
2025-08-13 17:42:25.386 |   while locating Procedure annotated with @Element(setName=,uniqueId=27, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.386 | 
2025-08-13 17:42:25.386 | Learn more:
2025-08-13 17:42:25.386 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.386 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.386 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.386 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.386 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.386 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.387 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at BoundProviderFactory.get(BoundProviderFactory.java:58)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.387 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.387 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.387 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.387 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.387 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.387 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.387 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.387 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.387 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.387 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.387 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.387 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.387 | 	... 133 more
2025-08-13 17:42:25.387 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.387 | 	... 135 more
2025-08-13 17:42:25.387 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.387 | 	... 139 more
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | 8) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.387 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.387 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   at RegisterTableProcedure.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter catalogFactory
2025-08-13 17:42:25.387 |   while locating RegisterTableProcedure
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:117)
2025-08-13 17:42:25.387 |   while locating Procedure annotated with @Element(setName=,uniqueId=28, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException (same stack trace as error #7)
2025-08-13 17:42:25.387 | 9) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.387 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.387 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   at UnregisterTableProcedure.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter catalogFactory
2025-08-13 17:42:25.387 |   while locating UnregisterTableProcedure
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:118)
2025-08-13 17:42:25.387 |   while locating Procedure annotated with @Element(setName=,uniqueId=29, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException (same stack trace as error #7)
2025-08-13 17:42:25.387 | 10) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.387 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.387 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   at TableChangesFunctionProvider.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter trinoCatalogFactory
2025-08-13 17:42:25.387 |   while locating TableChangesFunctionProvider
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:130)
2025-08-13 17:42:25.387 |   while locating ConnectorTableFunction annotated with @Element(setName=,uniqueId=38, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException (same stack trace as error #7)
2025-08-13 17:42:25.387 | 11) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.387 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.387 |   at TableChangesFunctionProcessorProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter icebergPageSourceProviderFactory
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:132)
2025-08-13 17:42:25.387 |   at IcebergFunctionProvider.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter tableChangesFunctionProcessorProviderFactory
2025-08-13 17:42:25.387 |   while locating IcebergFunctionProvider
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:131)
2025-08-13 17:42:25.387 |   while locating FunctionProvider
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.387 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.387 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.387 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.387 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.387 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.387 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.387 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.387 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.387 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.387 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.387 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.387 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.387 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.387 | 	... 146 more
2025-08-13 17:42:25.387 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.387 | 	... 148 more
2025-08-13 17:42:25.387 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.387 | 	... 152 more
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | 12) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.387 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.387 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   at IcebergTablesSystemTable.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter catalogFactory
2025-08-13 17:42:25.387 |   while locating IcebergTablesSystemTable
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:135)
2025-08-13 17:42:25.387 |   while locating SystemTable annotated with @Element(setName=,uniqueId=39, type=MULTIBINDER, keyType=)
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException (same stack trace as error #6)
2025-08-13 17:42:25.387 | 13) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   at DefaultIcebergFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating DefaultIcebergFileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:139)
2025-08-13 17:42:25.387 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Default
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.387 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.387 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.387 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.387 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.387 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.387 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.387 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.387 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.387 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.387 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.387 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.387 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.387 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.387 | 	... 96 more
2025-08-13 17:42:25.387 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.387 | 	... 98 more
2025-08-13 17:42:25.387 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.387 | 	... 102 more
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | 14) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.387 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.387 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   while locating TrinoCatalogFactory
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException (same stack trace as error #5)
2025-08-13 17:42:25.387 | 15) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException (same stack trace as error #13)
2025-08-13 17:42:25.387 | 16) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.387 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.387 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.387 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.387 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.387 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.387 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.387 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.387 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.387 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.387 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.387 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.387 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.387 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.387 | 	... 58 more
2025-08-13 17:42:25.387 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.387 | 	... 60 more
2025-08-13 17:42:25.387 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.387 | 	... 64 more
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | 17) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.387 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.387 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.387 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.387 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.387 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.387 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.387 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.387 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.387 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.387 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.387 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.387 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.387 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.387 | 	... 81 more
2025-08-13 17:42:25.387 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.387 | 	... 83 more
2025-08-13 17:42:25.387 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.387 | 	... 87 more
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | 18) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.387 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.387 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.387 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.387 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.387 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.387 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.387 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.387 |   at IcebergTransactionManager.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 1st parameter metadataFactory
2025-08-13 17:42:25.387 |   at IcebergModule.configure(IcebergModule.java:75)
2025-08-13 17:42:25.387 |   while locating IcebergTransactionManager
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | Learn more:
2025-08-13 17:42:25.387 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.387 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.387 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.387 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.387 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.387 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.387 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.387 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.387 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.387 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.387 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.387 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.387 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.387 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.387 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.387 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.387 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.387 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.387 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.387 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.387 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.387 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.387 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.387 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.387 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.387 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.387 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.387 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.387 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.387 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.387 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.387 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.387 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.387 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.387 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.387 | 	... 146 more
2025-08-13 17:42:25.387 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.387 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.387 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.387 | 	... 148 more
2025-08-13 17:42:25.387 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.387 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.387 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.387 | 	... 152 more
2025-08-13 17:42:25.387 | 
2025-08-13 17:42:25.387 | 19) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.387 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.387 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.387 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.387 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.387 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.388 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.388 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.388 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.388 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.388 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.388 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.388 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.388 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.388 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.388 |   while locating IcebergPageSourceProviderFactory
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | Learn more:
2025-08-13 17:42:25.388 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.388 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.388 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.388 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.388 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.388 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.388 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.388 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.388 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.388 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.388 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.388 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.388 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.388 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.388 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.388 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.388 | 	... 117 more
2025-08-13 17:42:25.388 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.388 | 	... 119 more
2025-08-13 17:42:25.388 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.388 | 	... 123 more
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | 20) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.388 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.388 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.388 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.388 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.388 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.388 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.388 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.388 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.388 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.388 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.388 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.388 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.388 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.388 |   while locating IcebergMetadataFactory
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | Learn more:
2025-08-13 17:42:25.388 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.388 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.388 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.388 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.388 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.388 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.388 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.388 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.388 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.388 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.388 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.388 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.388 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.388 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.388 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.388 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.388 | 	... 132 more
2025-08-13 17:42:25.388 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.388 | 	... 134 more
2025-08-13 17:42:25.388 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.388 | 	... 138 more
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | 21) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.388 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.388 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.388 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.388 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.388 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.388 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.388 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.388 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.388 |   at IcebergPageSourceProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.388 |   at IcebergModule.configure(IcebergModule.java:88)
2025-08-13 17:42:25.388 |   at TableChangesFunctionProcessorProviderFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter icebergPageSourceProviderFactory
2025-08-13 17:42:25.388 |   at IcebergModule.configure(IcebergModule.java:132)
2025-08-13 17:42:25.388 |   while locating TableChangesFunctionProcessorProviderFactory
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | Learn more:
2025-08-13 17:42:25.388 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.388 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.388 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.388 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.388 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.388 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.388 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.388 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.388 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.388 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.388 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.388 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.388 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.388 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.388 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.388 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.388 | 	... 131 more
2025-08-13 17:42:25.388 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.388 | 	... 133 more
2025-08-13 17:42:25.388 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.388 | 	... 137 more
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | 22) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.388 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.388 |   while locating TrinoFileSystemFactory annotated with @Element(setName=,uniqueId=43, type=MAPBINDER, keyType=String)
2025-08-13 17:42:25.388 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 2nd parameter factories
2025-08-13 17:42:25.388 |   at FileSystemModule.createFileSystemFactory(Unknown Source)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule
2025-08-13 17:42:25.388 |   at IcebergRestCatalogFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.388 |   while locating IcebergRestCatalogFileSystemFactory
2025-08-13 17:42:25.388 |   at IcebergRestCatalogModule.setup(IcebergRestCatalogModule.java:53)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.388 |   while locating IcebergFileSystemFactory annotated with @RealOptionalBinder$Actual
2025-08-13 17:42:25.388 |   at TrinoIcebergRestCatalogFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter fileSystemFactory
2025-08-13 17:42:25.388 |   while locating TrinoIcebergRestCatalogFactory
2025-08-13 17:42:25.388 |   at java.base/DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergCatalogModule -> ConditionalModule -> IcebergRestCatalogModule
2025-08-13 17:42:25.388 |   at IcebergMetadataFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 4th parameter catalogFactory
2025-08-13 17:42:25.388 |   at IcebergModule.configure(IcebergModule.java:102)
2025-08-13 17:42:25.388 |   at IcebergTransactionManager.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 1st parameter metadataFactory
2025-08-13 17:42:25.388 |   at IcebergModule.configure(IcebergModule.java:75)
2025-08-13 17:42:25.388 |   at IcebergConnector.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 3rd parameter transactionManager
2025-08-13 17:42:25.388 |   at IcebergModule.configure(IcebergModule.java:142)
2025-08-13 17:42:25.388 |   while locating IcebergConnector
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | Learn more:
2025-08-13 17:42:25.388 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.388 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.388 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:808)
2025-08-13 17:42:25.388 | 	at RealMapBinder$ExtensionRealMapProvider.doProvision(RealMapBinder.java:743)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ProviderMethod.doProvision(ProviderMethod.java:171)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.provision(InternalProviderInstanceBindingImpl.java:185)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.access$300(InternalProviderInstanceBindingImpl.java:139)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory$1.call(InternalProviderInstanceBindingImpl.java:169)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$CyclicFactory.get(InternalProviderInstanceBindingImpl.java:164)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at RealOptionalBinder$RealDirectTypeProvider.doProvision(RealOptionalBinder.java:376)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory$1.call(InternalProviderInstanceBindingImpl.java:120)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at InternalProviderInstanceBindingImpl$Factory.get(InternalProviderInstanceBindingImpl.java:115)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at FactoryProxy.get(FactoryProxy.java:60)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.388 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.388 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.388 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.388 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.388 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.388 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.388 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.388 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.388 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.388 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.388 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.388 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.388 | 	... 160 more
2025-08-13 17:42:25.388 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.388 | 	... 162 more
2025-08-13 17:42:25.388 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.388 | 	... 166 more
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | 23) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   while locating GcsStorageFactory
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | Learn more:
2025-08-13 17:42:25.388 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.388 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.388 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.388 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.388 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.388 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.388 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.388 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.388 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.388 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.388 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.388 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.388 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.388 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.388 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.388 | 	... 43 more
2025-08-13 17:42:25.388 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.388 | 	... 45 more
2025-08-13 17:42:25.388 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.388 | 	... 49 more
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | 24) [Guice/ErrorInjectingConstructor]: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 |   at GcsStorageFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:29)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   at GcsFileSystemFactory.<init>(Unknown Source)
2025-08-13 17:42:25.388 |       \_ for 2nd parameter storageFactory
2025-08-13 17:42:25.388 |   at GcsFileSystemModule.configure(GcsFileSystemModule.java:30)
2025-08-13 17:42:25.388 |       \_ installed by: IcebergConnectorFactory$IcebergFileSystemModule -> FileSystemModule -> GcsFileSystemModule
2025-08-13 17:42:25.388 |   while locating GcsFileSystemFactory
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | Learn more:
2025-08-13 17:42:25.388 |   https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR
2025-08-13 17:42:25.388 | Caused by: IOException: Unexpected exception reading PKCS#8 data
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:281)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromPkcs8(ServiceAccountCredentials.java:441)
2025-08-13 17:42:25.388 | 	at ServiceAccountCredentials.fromJson(ServiceAccountCredentials.java:204)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:214)
2025-08-13 17:42:25.388 | 	at GoogleCredentials.fromStream(GoogleCredentials.java:173)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory.<init>(GcsStorageFactory.java:71)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.GUICE$TRAMPOLINE(<generated>)
2025-08-13 17:42:25.388 | 	at GcsStorageFactory$$FastClassByGuice$$1477d6e.apply(<generated>)
2025-08-13 17:42:25.388 | 	at DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:114)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.inject(SingleParameterInjector.java:40)
2025-08-13 17:42:25.388 | 	at SingleParameterInjector.getAll(SingleParameterInjector.java:60)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.provision(ConstructorInjector.java:113)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.access$000(ConstructorInjector.java:33)
2025-08-13 17:42:25.388 | 	at ConstructorInjector$1.call(ConstructorInjector.java:98)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109)
2025-08-13 17:42:25.388 | 	at LifeCycleModule.provision(LifeCycleModule.java:53)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:117)
2025-08-13 17:42:25.388 | 	at ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:66)
2025-08-13 17:42:25.388 | 	at ConstructorInjector.construct(ConstructorInjector.java:93)
2025-08-13 17:42:25.388 | 	at ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)
2025-08-13 17:42:25.388 | 	at ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)
2025-08-13 17:42:25.388 | 	at SingletonScope$1.get(SingletonScope.java:169)
2025-08-13 17:42:25.388 | 	at InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)
2025-08-13 17:42:25.388 | 	at InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.388 | 	at Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.388 | 	at Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.388 | 	at IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.388 | 	at DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.388 | 	at LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at java.base/Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.388 | 	at java.base/FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.388 | 	at java.base/ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.388 | 	at Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.388 | 	at StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.388 | 	at Server.doStart(Server.java:152)
2025-08-13 17:42:25.388 | 	at Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.388 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.388 | 	at Server.start(Server.java:90)
2025-08-13 17:42:25.388 | 	at TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.388 | Caused by: InvalidKeySpecException: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:252)
2025-08-13 17:42:25.388 | 	at java.base/KeyFactory.generatePrivate(KeyFactory.java:388)
2025-08-13 17:42:25.388 | 	at OAuth2Utils.privateKeyFromPkcs8(OAuth2Utils.java:277)
2025-08-13 17:42:25.388 | 	... 57 more
2025-08-13 17:42:25.388 | Caused by: InvalidKeyException: Unable to decode key
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:98)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.<init>(RSAPrivateCrtKeyImpl.java:162)
2025-08-13 17:42:25.388 | 	at java.base/RSAPrivateCrtKeyImpl.newKey(RSAPrivateCrtKeyImpl.java:92)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.generatePrivate(RSAKeyFactory.java:347)
2025-08-13 17:42:25.388 | 	at java.base/RSAKeyFactory.engineGeneratePrivate(RSAKeyFactory.java:248)
2025-08-13 17:42:25.388 | 	... 59 more
2025-08-13 17:42:25.388 | Caused by: IOException: extra data at the end
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:433)
2025-08-13 17:42:25.388 | 	at java.base/DerValue.<init>(DerValue.java:345)
2025-08-13 17:42:25.388 | 	at java.base/PKCS8Key.<init>(PKCS8Key.java:96)
2025-08-13 17:42:25.388 | 	... 63 more
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | 24 errors
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | ======================
2025-08-13 17:42:25.388 | Full classname legend:
2025-08-13 17:42:25.388 | ======================
2025-08-13 17:42:25.388 | Bootstrap:                                           "io.airlift.bootstrap.Bootstrap"
2025-08-13 17:42:25.388 | BoundProviderFactory:                                "com.google.inject.internal.BoundProviderFactory"
2025-08-13 17:42:25.388 | ClassLoaderSafeConnectorPageSinkProvider:            "io.trino.plugin.base.classloader.ClassLoaderSafeConnectorPageSinkProvider"
2025-08-13 17:42:25.388 | ClassLoaderSafeConnectorPageSourceProviderFactory:   "io.trino.plugin.base.classloader.ClassLoaderSafeConnectorPageSourceProviderFactory"
2025-08-13 17:42:25.388 | ClassLoaderSafeConnectorSplitManager:                "io.trino.plugin.base.classloader.ClassLoaderSafeConnectorSplitManager"
2025-08-13 17:42:25.388 | ConditionalModule:                                   "io.airlift.configuration.ConditionalModule"
2025-08-13 17:42:25.388 | ConnectorPageSinkProvider:                           "io.trino.spi.connector.ConnectorPageSinkProvider"
2025-08-13 17:42:25.388 | ConnectorPageSourceProviderFactory:                  "io.trino.spi.connector.ConnectorPageSourceProviderFactory"
2025-08-13 17:42:25.388 | ConnectorSplitManager:                               "io.trino.spi.connector.ConnectorSplitManager"
2025-08-13 17:42:25.388 | ConnectorTableFunction:                              "io.trino.spi.function.table.ConnectorTableFunction"
2025-08-13 17:42:25.388 | ConstructorBindingImpl$Factory:                      "com.google.inject.internal.ConstructorBindingImpl$Factory"
2025-08-13 17:42:25.388 | ConstructorInjector:                                 "com.google.inject.internal.ConstructorInjector"
2025-08-13 17:42:25.388 | ConstructorInjector$1:                               "com.google.inject.internal.ConstructorInjector$1"
2025-08-13 17:42:25.388 | DefaultCatalogFactory:                               "io.trino.connector.DefaultCatalogFactory"
2025-08-13 17:42:25.388 | DefaultConstructionProxyFactory$FastClassProxy:      "com.google.inject.internal.DefaultConstructionProxyFactory$FastClassProxy"
2025-08-13 17:42:25.388 | DefaultIcebergFileSystemFactory:                     "io.trino.plugin.iceberg.catalog.rest.DefaultIcebergFileSystemFactory"
2025-08-13 17:42:25.388 | DerValue:                                            "sun.security.util.DerValue"
2025-08-13 17:42:25.388 | DirectExecutor:                                      "com.google.common.util.concurrent.DirectExecutor"
2025-08-13 17:42:25.388 | DirectMethodHandleAccessor:                          "jdk.internal.reflect.DirectMethodHandleAccessor"
2025-08-13 17:42:25.388 | Element:                                             "com.google.inject.internal.Element"
2025-08-13 17:42:25.388 | ExecutorCompletionService:                           "java.util.concurrent.ExecutorCompletionService"
2025-08-13 17:42:25.388 | Executors:                                           "io.trino.util.Executors"
2025-08-13 17:42:25.388 | Executors$RunnableAdapter:                           "java.util.concurrent.Executors$RunnableAdapter"
2025-08-13 17:42:25.388 | FactoryProxy:                                        "com.google.inject.internal.FactoryProxy"
2025-08-13 17:42:25.388 | FileSystemModule:                                    "io.trino.filesystem.manager.FileSystemModule"
2025-08-13 17:42:25.388 | ForClassLoaderSafe:                                  "io.trino.plugin.base.classloader.ForClassLoaderSafe"
2025-08-13 17:42:25.388 | FunctionProvider:                                    "io.trino.spi.function.FunctionProvider"
2025-08-13 17:42:25.388 | FutureTask:                                          "java.util.concurrent.FutureTask"
2025-08-13 17:42:25.388 | GcsFileSystemFactory:                                "io.trino.filesystem.gcs.GcsFileSystemFactory"
2025-08-13 17:42:25.388 | GcsFileSystemModule:                                 "io.trino.filesystem.gcs.GcsFileSystemModule"
2025-08-13 17:42:25.388 | GcsStorageFactory:                                   "io.trino.filesystem.gcs.GcsStorageFactory"
2025-08-13 17:42:25.388 | GcsStorageFactory$$FastClassByGuice$$1477d6e:        "io.trino.filesystem.gcs.GcsStorageFactory$$FastClassByGuice$$1477d6e"
2025-08-13 17:42:25.388 | GoogleCredentials:                                   "com.google.auth.oauth2.GoogleCredentials"
2025-08-13 17:42:25.388 | Guice:                                               "com.google.inject.Guice"
2025-08-13 17:42:25.388 | IOException:                                         "java.io.IOException"
2025-08-13 17:42:25.388 | IcebergCatalogModule:                                "io.trino.plugin.iceberg.catalog.IcebergCatalogModule"
2025-08-13 17:42:25.388 | IcebergConnector:                                    "io.trino.plugin.iceberg.IcebergConnector"
2025-08-13 17:42:25.388 | IcebergConnectorFactory:                             "io.trino.plugin.iceberg.IcebergConnectorFactory"
2025-08-13 17:42:25.388 | IcebergConnectorFactory$IcebergFileSystemModule:     "io.trino.plugin.iceberg.IcebergConnectorFactory$IcebergFileSystemModule"
2025-08-13 17:42:25.388 | IcebergFileSystemFactory:                            "io.trino.plugin.iceberg.IcebergFileSystemFactory"
2025-08-13 17:42:25.388 | IcebergFunctionProvider:                             "io.trino.plugin.iceberg.functions.IcebergFunctionProvider"
2025-08-13 17:42:25.388 | IcebergMetadataFactory:                              "io.trino.plugin.iceberg.IcebergMetadataFactory"
2025-08-13 17:42:25.388 | IcebergModule:                                       "io.trino.plugin.iceberg.IcebergModule"
2025-08-13 17:42:25.388 | IcebergPageSinkProvider:                             "io.trino.plugin.iceberg.IcebergPageSinkProvider"
2025-08-13 17:42:25.388 | IcebergPageSourceProviderFactory:                    "io.trino.plugin.iceberg.IcebergPageSourceProviderFactory"
2025-08-13 17:42:25.388 | IcebergRestCatalogFileSystemFactory:                 "io.trino.plugin.iceberg.catalog.rest.IcebergRestCatalogFileSystemFactory"
2025-08-13 17:42:25.388 | IcebergRestCatalogModule:                            "io.trino.plugin.iceberg.catalog.rest.IcebergRestCatalogModule"
2025-08-13 17:42:25.388 | IcebergSplitManager:                                 "io.trino.plugin.iceberg.IcebergSplitManager"
2025-08-13 17:42:25.388 | IcebergTablesSystemTable:                            "io.trino.plugin.iceberg.system.IcebergTablesSystemTable"
2025-08-13 17:42:25.388 | IcebergTransactionManager:                           "io.trino.plugin.iceberg.IcebergTransactionManager"
2025-08-13 17:42:25.388 | InternalFactoryToProviderAdapter:                    "com.google.inject.internal.InternalFactoryToProviderAdapter"
2025-08-13 17:42:25.388 | InternalInjectorCreator:                             "com.google.inject.internal.InternalInjectorCreator"
2025-08-13 17:42:25.388 | InternalProviderInstanceBindingImpl$CyclicFactory:   "com.google.inject.internal.InternalProviderInstanceBindingImpl$CyclicFactory"
2025-08-13 17:42:25.388 | InternalProviderInstanceBindingImpl$CyclicFactory$1: "com.google.inject.internal.InternalProviderInstanceBindingImpl$CyclicFactory$1"
2025-08-13 17:42:25.388 | InternalProviderInstanceBindingImpl$Factory:         "com.google.inject.internal.InternalProviderInstanceBindingImpl$Factory"
2025-08-13 17:42:25.388 | InternalProviderInstanceBindingImpl$Factory$1:       "com.google.inject.internal.InternalProviderInstanceBindingImpl$Factory$1"
2025-08-13 17:42:25.388 | InvalidKeyException:                                 "java.security.InvalidKeyException"
2025-08-13 17:42:25.388 | InvalidKeySpecException:                             "java.security.spec.InvalidKeySpecException"
2025-08-13 17:42:25.388 | KeyFactory:                                          "java.security.KeyFactory"
2025-08-13 17:42:25.388 | LazyCatalogFactory:                                  "io.trino.connector.LazyCatalogFactory"
2025-08-13 17:42:25.388 | LifeCycleModule:                                     "io.airlift.bootstrap.LifeCycleModule"
2025-08-13 17:42:25.388 | OAuth2Utils:                                         "com.google.auth.oauth2.OAuth2Utils"
2025-08-13 17:42:25.388 | PKCS8Key:                                            "sun.security.pkcs.PKCS8Key"
2025-08-13 17:42:25.388 | Procedure:                                           "io.trino.spi.procedure.Procedure"
2025-08-13 17:42:25.388 | ProviderMethod:                                      "com.google.inject.internal.ProviderMethod"
2025-08-13 17:42:25.388 | ProviderToInternalFactoryAdapter:                    "com.google.inject.internal.ProviderToInternalFactoryAdapter"
2025-08-13 17:42:25.388 | ProvisionListenerStackCallback:                      "com.google.inject.internal.ProvisionListenerStackCallback"
2025-08-13 17:42:25.388 | ProvisionListenerStackCallback$Provision:            "com.google.inject.internal.ProvisionListenerStackCallback$Provision"
2025-08-13 17:42:25.388 | RSAKeyFactory:                                       "sun.security.rsa.RSAKeyFactory"
2025-08-13 17:42:25.388 | RSAPrivateCrtKeyImpl:                                "sun.security.rsa.RSAPrivateCrtKeyImpl"
2025-08-13 17:42:25.388 | RealMapBinder$ExtensionRealMapProvider:              "com.google.inject.internal.RealMapBinder$ExtensionRealMapProvider"
2025-08-13 17:42:25.388 | RealOptionalBinder$Actual:                           "com.google.inject.internal.RealOptionalBinder$Actual"
2025-08-13 17:42:25.388 | RealOptionalBinder$Default:                          "com.google.inject.internal.RealOptionalBinder$Default"
2025-08-13 17:42:25.388 | RealOptionalBinder$RealDirectTypeProvider:           "com.google.inject.internal.RealOptionalBinder$RealDirectTypeProvider"
2025-08-13 17:42:25.388 | RegisterTableProcedure:                              "io.trino.plugin.iceberg.procedure.RegisterTableProcedure"
2025-08-13 17:42:25.388 | RollbackToSnapshotProcedure:                         "io.trino.plugin.iceberg.procedure.RollbackToSnapshotProcedure"
2025-08-13 17:42:25.388 | Server:                                              "io.trino.server.Server"
2025-08-13 17:42:25.388 | ServiceAccountCredentials:                           "com.google.auth.oauth2.ServiceAccountCredentials"
2025-08-13 17:42:25.388 | SingleParameterInjector:                             "com.google.inject.internal.SingleParameterInjector"
2025-08-13 17:42:25.388 | SingletonScope$1:                                    "com.google.inject.internal.SingletonScope$1"
2025-08-13 17:42:25.388 | StaticCatalogManager:                                "io.trino.connector.StaticCatalogManager"
2025-08-13 17:42:25.388 | SystemTable:                                         "io.trino.spi.connector.SystemTable"
2025-08-13 17:42:25.388 | TableChangesFunctionProcessorProviderFactory:        "io.trino.plugin.iceberg.functions.tablechanges.TableChangesFunctionProcessorProviderFactory"
2025-08-13 17:42:25.388 | TableChangesFunctionProvider:                        "io.trino.plugin.iceberg.functions.tablechanges.TableChangesFunctionProvider"
2025-08-13 17:42:25.388 | TrinoCatalogFactory:                                 "io.trino.plugin.iceberg.catalog.TrinoCatalogFactory"
2025-08-13 17:42:25.388 | TrinoFileSystemFactory:                              "io.trino.filesystem.TrinoFileSystemFactory"
2025-08-13 17:42:25.388 | TrinoIcebergRestCatalogFactory:                      "io.trino.plugin.iceberg.catalog.rest.TrinoIcebergRestCatalogFactory"
2025-08-13 17:42:25.388 | TrinoServer:                                         "io.trino.server.TrinoServer"
2025-08-13 17:42:25.388 | UnregisterTableProcedure:                            "io.trino.plugin.iceberg.procedure.UnregisterTableProcedure"
2025-08-13 17:42:25.388 | ========================
2025-08-13 17:42:25.388 | End of classname legend:
2025-08-13 17:42:25.388 | ========================
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | 	at com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:589)
2025-08-13 17:42:25.388 | 	at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:190)
2025-08-13 17:42:25.388 | 	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:113)
2025-08-13 17:42:25.388 | 	at com.google.inject.Guice.createInjector(Guice.java:87)
2025-08-13 17:42:25.388 | 	at io.airlift.bootstrap.Bootstrap.initialize(Bootstrap.java:335)
2025-08-13 17:42:25.388 | 	at io.trino.plugin.iceberg.IcebergConnectorFactory.createConnector(IcebergConnectorFactory.java:102)
2025-08-13 17:42:25.388 | 	at io.trino.plugin.iceberg.IcebergConnectorFactory.create(IcebergConnectorFactory.java:64)
2025-08-13 17:42:25.388 | 	at io.trino.connector.DefaultCatalogFactory.createConnector(DefaultCatalogFactory.java:208)
2025-08-13 17:42:25.388 | 	at io.trino.connector.DefaultCatalogFactory.createCatalog(DefaultCatalogFactory.java:124)
2025-08-13 17:42:25.388 | 	at io.trino.connector.LazyCatalogFactory.createCatalog(LazyCatalogFactory.java:45)
2025-08-13 17:42:25.388 | 	at io.trino.connector.StaticCatalogManager.lambda$loadInitialCatalogs$1(StaticCatalogManager.java:161)
2025-08-13 17:42:25.388 | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:545)
2025-08-13 17:42:25.388 | 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
2025-08-13 17:42:25.388 | 	at com.google.common.util.concurrent.DirectExecutor.execute(DirectExecutor.java:30)
2025-08-13 17:42:25.388 | 	at java.base/java.util.concurrent.ExecutorCompletionService.submit(ExecutorCompletionService.java:186)
2025-08-13 17:42:25.388 | 	at io.trino.util.Executors.executeUntilFailure(Executors.java:46)
2025-08-13 17:42:25.388 | 	at io.trino.connector.StaticCatalogManager.loadInitialCatalogs(StaticCatalogManager.java:155)
2025-08-13 17:42:25.388 | 	at io.trino.server.Server.doStart(Server.java:152)
2025-08-13 17:42:25.388 | 	at io.trino.server.Server.lambda$start$0(Server.java:90)
2025-08-13 17:42:25.388 | 	at io.trino.$gen.Trino_475____20250813_104218_1.run(Unknown Source)
2025-08-13 17:42:25.388 | 	at io.trino.server.Server.start(Server.java:90)
2025-08-13 17:42:25.388 | 	at io.trino.server.TrinoServer.main(TrinoServer.java:37)
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | 
2025-08-13 17:42:25.388 | 2025-08-13T10:42:25.384Z	INFO	LifeCycleManager Shutdown Hook	io.airlift.bootstrap.LifeCycleManager	JVM is shutting down, cleaning up